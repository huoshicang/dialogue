{"version":3,"file":"js/341.c1c94498.js","mappings":"kQASA,GAA4BA,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,kBACRC,MAAO,CAAC,WACRC,KAAAA,CAAMC,GCyFR,MAAMC,GAAYC,EAAAA,EAAAA,KACZJ,EAAQE,EAGRG,EAAYF,EAAUE,UAGtBC,GAAmBC,EAAAA,EAAAA,KAAa,GAEhCC,GAAgBD,EAAAA,EAAAA,IAAc,CAAC,KAE/BE,GAAaF,EAAAA,EAAAA,KAAa,GAE1BG,GAAmBH,EAAAA,EAAAA,IAKvB,IAGII,GAAOC,EAAAA,EAAAA,IAAS,CACpBC,QAASR,EAAUS,IACnBC,UAAWV,EAAUW,SACrBC,WAAY,GACZC,OAAQ,GACRC,gBAAiB,CACfC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,iBAAkB,KAClBC,WAAY,KACZC,gBAAiB,OACjBC,KAAM,KACNC,QAAQ,EACRC,KAAM,KACNC,MAAO,KACPC,eAAgB,KAChBC,eAAe,KAIbC,EAAgBC,IACpBvB,EAAKQ,gBAAgBC,MAAQc,EAAUC,WAEvCzB,EAAiB0B,MAAMC,KAAK,CAC1BC,MAAO,OACPF,MAAOF,EAAUC,aAEnBzB,EAAiB0B,MAAMC,KAAK,CAC1BC,MAAO,OACPF,MAAOF,EAAUK,qBAEnB7B,EAAiB0B,MAAMC,KAAK,CAC1BC,MAAO,MACPF,MAAOF,EAAUM,QAEnB9B,EAAiB0B,MAAMC,KAAK,CAC1BC,MAAO,OACPF,MAAOF,EAAUO,eACjB,EAIEC,EAAWC,UACflC,EAAW2B,OAAQ,EACK,KAApBzB,EAAKM,aAAmBN,EAAKM,WAAa,QAE9C,IACE,MAAM2B,QAAYC,EAAAA,EAAIC,SAASnC,GAEP,MAApBiC,EAAIG,aACNC,EAAAA,EAAQC,QAAQL,EAAIM,KAAKC,SACzBnD,EAAMoD,WAENJ,EAAAA,EAAQK,MAAMT,EAAIO,QAEtB,CAAE,MAAOG,GACPC,QAAQC,IAAI,OACd,CAAE,QACAlD,EAAiB8B,OAAQ,EACzB3B,EAAW2B,OAAQ,EACnBzB,EAAKM,WAAa,GAClBN,EAAKO,OAAS,GACdP,EAAKQ,gBAAkB,CACrBC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,iBAAkB,KAClBC,WAAY,KACZC,gBAAiB,OACjBC,KAAM,KACNC,QAAQ,EACRC,KAAM,KACNC,MAAO,KACPC,eAAgB,KAChBC,eAAe,GAEjBtB,EAAiB0B,MAAQ,EAC3B,GDpEF,OCwEAqB,EAAAA,EAAAA,IAAMnD,GAAmBoD,IAErBlD,EAAc4B,MADZsB,EACoB,CAAC,KAED,CAAC,GACzB,KAIFC,EAAAA,EAAAA,KAAUhB,UACkC,IAAtCxC,EAAUyD,iBAAiBC,cACvB1D,EAAU2D,cAClB,IDpFK,CAACC,EAAUC,KAChB,MAAMC,GAAyBC,EAAAA,EAAAA,IAAkB,eAC3CC,GAAoBD,EAAAA,EAAAA,IAAkB,UACtCE,GAAqBF,EAAAA,EAAAA,IAAkB,WACvCG,GAAyBH,EAAAA,EAAAA,IAAkB,eAC3CI,GAAsBJ,EAAAA,EAAAA,IAAkB,YACxCK,GAAsBL,EAAAA,EAAAA,IAAkB,YACxCM,GAAsBN,EAAAA,EAAAA,IAAkB,YACxCO,GAAoBP,EAAAA,EAAAA,IAAkB,UACtCQ,GAA4BR,EAAAA,EAAAA,IAAkB,kBAC9CS,GAAsBT,EAAAA,EAAAA,IAAkB,YAE9C,OAAQU,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,KAAM,EACzDC,EAAAA,EAAAA,IAAaZ,EAAmB,CAC9Ba,MAAO,CAAEC,MAAO,QAChB,gBAAiBzE,EAAc4B,MAC/B8C,gBAAiBlB,EAAO,KAAOA,EAAO,GAAMmB,GAAiB7E,EAAiB8B,OAAQ,IACrF,CACDgD,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAad,EAAwB,CAAEqB,IAAK,KAAO,CACjDF,SAASC,EAAAA,EAAAA,KAAS,IAAMrB,EAAO,KAAOA,EAAO,GAAK,EAChDuB,EAAAA,EAAAA,IAAiB,aAEnBC,EAAG,OAGPA,EAAG,GACF,EAAG,CAAC,mBACPT,EAAAA,EAAAA,IAAaJ,EAAqB,CAChCM,MAAO,IACPQ,QAASnF,EAAiB8B,MAC1BsD,KAAMhD,EACNiD,SAAU3B,EAAO,KAAOA,EAAO,GAAMmB,GAAiB7E,EAAiB8B,OAAQ,GAC/EwD,eAAgB,GAChB,aAAcnF,EAAW2B,MACzB,cAAe3B,EAAW2B,OACzB,CACDyD,OAAOR,EAAAA,EAAAA,KAAS,IAAMrB,EAAO,KAAOA,EAAO,GAAK,EAC9CuB,EAAAA,EAAAA,IAAiB,cAEnBH,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaN,EAAmB,CAAErD,MAAOT,GAAQ,CAC/CyE,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaV,EAAwB,CACnCyB,MAAO,aACPC,QAAS,SACTzD,MAAO,MACN,CACD8C,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaX,EAAoB,CAC/B4B,WAAYrF,EAAKM,WACjB,sBAAuB+C,EAAO,KAAOA,EAAO,GAAMmB,GAAkBxE,EAAKM,WAAckE,GACvFc,YAAa,SACZ,KAAM,EAAG,CAAC,kBAEfT,EAAG,KAELT,EAAAA,EAAAA,IAAaV,EAAwB,CACnCyB,MAAO,SACPxD,MAAO,KACPyD,QAAS,IACR,CACDX,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaR,EAAqB,CAChCyB,WAAYrF,EAAKO,OACjB,sBAAuB8C,EAAO,KAAOA,EAAO,GAAMmB,GAAkBxE,EAAKO,OAAUiE,GACnFc,YAAa,QACb,cAAe,IACd,CACDb,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaT,EAAqB,CAAElC,MAAO,MAAQ,CACjDgD,SAASC,EAAAA,EAAAA,KAAS,IAAMrB,EAAO,KAAOA,EAAO,GAAK,EAChDuB,EAAAA,EAAAA,IAAiB,UAEnBC,EAAG,KAELT,EAAAA,EAAAA,IAAaT,EAAqB,CAAElC,MAAO,OAAS,CAClDgD,SAASC,EAAAA,EAAAA,KAAS,IAAMrB,EAAO,MAAQA,EAAO,IAAM,EAClDuB,EAAAA,EAAAA,IAAiB,WAEnBC,EAAG,OAGPA,EAAG,GACF,EAAG,CAAC,kBAETA,EAAG,KAELT,EAAAA,EAAAA,IAAaV,EAAwB,CACnCyB,MAAO,wBACPxD,MAAO,KACPyD,QAAS,WACR,CACDX,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaR,EAAqB,CAChCyB,WAAYrF,EAAKQ,gBAAgBC,MACjC,sBAAuB4C,EAAO,KAAOA,EAAO,GAAMmB,GAAkBxE,EAAKQ,gBAAgBC,MAAS+D,GAClGc,YAAa,QACb,cAAe,GACf,YAAa,aACbC,SAAUjE,GACT,CACDmD,SAASC,EAAAA,EAAAA,KAAS,IAAM,GACrBT,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,MAAMqB,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAOjG,GAAWyD,kBAAmByC,KAC/FzB,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAahC,EAAqB,CACtDlC,MAAOiE,EACP/D,MAAO+D,EAAKE,YACX,KAAM,EAAG,CAAC,QAAS,aACpB,SAENf,EAAG,GACF,EAAG,CAAC,kBAETA,EAAG,KAELT,EAAAA,EAAAA,IAAaV,EAAwB,CACnCyB,MAAO,SACPxD,MAAO,SACPyD,QAAS,gCACR,CACDX,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaP,EAAqB,CAChCwB,WAAYrF,EAAKQ,gBAAgBG,MACjC,sBAAuB0C,EAAO,KAAOA,EAAO,GAAMmB,GAAkBxE,EAAKQ,gBAAgBG,MAAS6D,GAClGqB,IAAK,EACLC,IAAK,EACLC,KAAM,IACL,KAAM,EAAG,CAAC,kBAEflB,EAAG,KAELT,EAAAA,EAAAA,IAAaV,EAAwB,CACnCyB,MAAO,SACPxD,MAAO,MACPyD,QAAS,kBACR,CACDX,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaP,EAAqB,CAChCwB,WAAYrF,EAAKQ,gBAAgBI,YACjC,sBAAuByC,EAAO,KAAOA,EAAO,GAAMmB,GAAkBxE,EAAKQ,gBAAgBI,YAAe4D,GACxGqB,IAAK,GACLC,IAAK,IACLC,KAAM,IACL,KAAM,EAAG,CAAC,kBAEflB,EAAG,OAGPA,EAAG,GACF,EAAG,CAAC,WACPmB,EAAAA,EAAAA,KAAgB5B,EAAAA,EAAAA,IAAaL,EAA2B,CACtDM,MAAO,CAAC,aAAa,QACrB9B,KAAMxC,EAAiB0B,MACvByD,MAAO,OACPe,OAAQ,GACP,KAAM,EAAG,CAAC,SAAU,CACrB,CAACC,EAAAA,GAAQnG,EAAiB0B,MAAMyB,aAGpC2B,EAAG,GACF,EAAG,CAAC,UAAW,aAAc,iBAC/B,GAAG,CAER,IEtSA,MAAMsB,EAAc,EAEpB,Q,oBCOA,GAA4BhH,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,WACRE,KAAAA,CAAMC,GCsCR,MAAMG,GAAYD,EAAAA,EAAAA,KAAeC,UAC3B0G,GAAexG,EAAAA,EAAAA,IAAc,CAAC,MAC9ByG,GAAQC,EAAAA,EAAAA,MAGRC,GAAY3G,EAAAA,EAAAA,IAMhB,IAGI4G,GAAoB5G,EAAAA,EAAAA,KAAI,GAExB6G,EAAmB9B,GAAgB+B,EAAAA,EAAOhF,KAAK,SAASiD,KAGxDlC,EAAUT,UACd,IACE,MAAMC,QAAYC,EAAAA,EAAIyE,cAAc,CAClCzG,QAASR,EAAUS,MAGG,MAApB8B,EAAIG,YACNmE,EAAU9E,MAAQQ,EAAIM,KAEtBF,EAAAA,EAAQK,MAAMT,EAAIO,QAEtB,CAAE,MAAOG,GACPC,QAAQC,IAAI,SACd,CAAE,QACA2D,EAAkB/E,OAAQ,CAC5B,GAIImF,EAAa5E,UACjB,IACE,MAAMC,QAAYC,EAAAA,EAAI2E,YAAY,CAChC3G,QAASR,EAAUS,OAChBoC,IAGmB,MAApBN,EAAIG,aACNC,EAAAA,EAAQC,QAAQL,EAAIO,eACdC,KAENJ,EAAAA,EAAQK,MAAMT,EAAIO,QAEtB,CAAE,MAAOG,GACPN,EAAAA,EAAQK,MAAM,OAChB,IAKFM,EAAAA,EAAAA,KAAUhB,SAAYS,MAEtB,MAAMqE,EAAmBC,IACvBX,EAAa3E,MAAQ,CAACsF,EAAG,ED7B3B,OCiCAjE,EAAAA,EAAAA,KAAM,IAAMuD,EAAMW,OAAOD,IAAID,EAAiB,CAAEG,WAAW,IDjCpD,CAAC7D,EAAUC,KAChB,MAAM6D,GAA6B3D,EAAAA,EAAAA,IAAkB,mBAC/C4D,GAAqB5D,EAAAA,EAAAA,IAAkB,WACvC6D,GAAwB7D,EAAAA,EAAAA,IAAkB,cAC1C8D,GAAqB9D,EAAAA,EAAAA,IAAkB,WACvCD,GAAyBC,EAAAA,EAAAA,IAAkB,eAC3C+D,GAAuB/D,EAAAA,EAAAA,IAAkB,aACzCgE,GAAwBhE,EAAAA,EAAAA,IAAkB,cAC1CC,GAAoBD,EAAAA,EAAAA,IAAkB,UAE5C,OAAQU,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,KAAM,EACzDC,EAAAA,EAAAA,IAAaoD,EAAiB,CAAE/E,QAASA,KACzC2B,EAAAA,EAAAA,IAAaZ,EAAmB,CAC9Ba,MAAO,CAAEC,MAAO,QAChBC,gBAAiBkC,EACjB,wBAAyBL,EAAa3E,OACrC,CACDgD,SAASC,EAAAA,EAAAA,KAAS,IAAM,CACrB8B,EAAkB/E,QACdwC,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAayB,EAAuB,CACjDzC,IAAK,EACL8C,UAAW,IACV,CACDhD,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAa+C,EAAoB,CAC/BO,UAAW,WACXrD,MAAO,CAAEC,MAAO,QAChBqD,KAAM,SACL,CACDlD,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAa8C,EAA4B,CAAEU,KAAM,OAEnD/C,EAAG,OAGPA,EAAG,MAELgD,EAAAA,EAAAA,IAAoB,IAAI,GACD,GAA1BtB,EAAU9E,MAAMyB,SACZe,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa0B,EAAoB,CAAE1C,IAAK,OACtDV,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,CAAEQ,IAAK,IAAKa,EAAAA,EAAAA,IAAYe,EAAU9E,OAAO,CAACiE,EAAMoC,MACxF7D,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAa4B,EAAuB,CACxDQ,QAAS,cACTC,WAAY,GACZrD,IAAKmD,GACJ,CACDG,SAASvD,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAakD,EAAsB,CACjCY,QAAU1D,GAChBoC,EAAW,CACTuB,QAASzC,EAAKvF,IACdiI,WAAY1C,EAAK0C,cAGZ,CACD3D,SAASC,EAAAA,EAAAA,KAAS,IAAMrB,EAAO,KAAOA,EAAO,GAAK,EAChDuB,EAAAA,EAAAA,IAAiB,cAEnBC,EAAG,GACF,KAAM,CAAC,eAEZJ,SAASC,EAAAA,EAAAA,KAAS,IAAM,GACrBT,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAarC,EAAwB,CAClDqB,IAAKe,EAAKvF,KACT,CACDsE,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBE,EAAAA,EAAAA,KAAiByD,EAAAA,EAAAA,IAAiB3C,EAAKpF,YAAa,MAEtDuE,EAAG,GACF,UAELA,EAAG,GACF,SACD,SAEVA,EAAG,GACF,EAAG,CAAC,2BACN,GAAG,CAER,IEhKA,MAAM,EAAc,EAEpB,Q,kECFO,SAASyD,IACZ,MAAO,CACHtG,OAAO,EACPuG,QAAQ,EACRC,WAAY,KACZC,KAAK,EACLC,MAAO,KACPC,UAAU,EACVC,SAAU,KACVC,QAAQ,EACRC,UAAW,KACXC,WAAY,KAEpB,CACU,IAACC,EAAYV,IAChB,SAASW,EAAeC,GAC3BF,EAAYE,CAChB,CCpBA,MAAMC,EAAW,CAAEC,KAAMA,IAAM,MAC/B,SAASC,EAAKC,EAAOC,EAAM,IACvB,IAAIC,EAA0B,kBAAVF,EAAqBA,EAAQA,EAAME,OACvD,MAAMC,EAAM,CACRC,QAASA,CAACC,EAAMC,KACZ,IAAIC,EAA2B,kBAARD,EAAmBA,EAAMA,EAAIJ,OAGpD,OAFAK,EAAYA,EAAUH,QAAQI,EAAMC,MAAO,MAC3CP,EAASA,EAAOE,QAAQC,EAAME,GACvBJ,CAAG,EAEdO,SAAUA,IACC,IAAIC,OAAOT,EAAQD,IAGlC,OAAOE,CACX,CACO,MAAMK,EAAQ,CACjBI,iBAAkB,yBAClBC,kBAAmB,cACnBC,uBAAwB,gBACxBC,eAAgB,OAChBC,WAAY,KACZC,kBAAmB,KACnBC,gBAAiB,KACjBC,aAAc,OACdC,kBAAmB,MACnBC,cAAe,MACfC,oBAAqB,OACrBC,UAAW,WACXC,gBAAiB,oBACjBC,gBAAiB,WACjBC,wBAAyB,iCACzBC,yBAA0B,mBAC1BC,gBAAiB,OACjBC,mBAAoB,0BACpBC,WAAY,cACZC,gBAAiB,eACjBC,QAAS,SACTC,aAAc,WACdC,eAAgB,OAChBC,gBAAiB,aACjBC,kBAAmB,YACnBC,gBAAiB,YACjBC,iBAAkB,aAClBC,eAAgB,YAChBC,UAAW,QACXC,QAAS,UACTC,kBAAmB,iCACnBC,gBAAiB,mCACjBC,kBAAmB,KACnBC,gBAAiB,KACjBC,kBAAmB,gCACnBC,oBAAqB,gBACrBC,WAAY,UACZC,cAAe,WACfC,mBAAoB,oDACpBC,sBAAuB,qDACvBC,aAAc,6CACd3C,MAAO,eACP4C,cAAe,OACfC,SAAU,MACVC,UAAW,MACXC,UAAW,QACXC,eAAgB,WAChBC,UAAW,SACXC,cAAe,OACfC,cAAe,MACfC,cAAgBC,GAAS,IAAInD,OAAO,WAAWmD,kCAC/CC,gBAAkBC,GAAW,IAAIrD,OAAO,QAAQsD,KAAK1H,IAAI,EAAGyH,EAAS,yDACrEE,QAAUF,GAAW,IAAIrD,OAAO,QAAQsD,KAAK1H,IAAI,EAAGyH,EAAS,wDAC7DG,iBAAmBH,GAAW,IAAIrD,OAAO,QAAQsD,KAAK1H,IAAI,EAAGyH,EAAS,qBACtEI,kBAAoBJ,GAAW,IAAIrD,OAAO,QAAQsD,KAAK1H,IAAI,EAAGyH,EAAS,QACvEK,eAAiBL,GAAW,IAAIrD,OAAO,QAAQsD,KAAK1H,IAAI,EAAGyH,EAAS,uBAAwB,MAK1FM,EAAU,uBACVC,EAAY,wDACZC,EAAS,8GACTC,EAAK,qEACLC,EAAU,uCACVC,EAAS,wBACTC,EAAW7E,EAAK,sJACjBK,QAAQ,QAASuE,GACjBvE,QAAQ,aAAc,qBACtBA,QAAQ,UAAW,yBACnBA,QAAQ,cAAe,WACvBA,QAAQ,WAAY,gBACpBA,QAAQ,QAAS,qBACjBM,WACCmE,EAAa,uFACbC,EAAY,UACZC,EAAc,8BACdC,EAAMjF,EAAK,+GACZK,QAAQ,QAAS2E,GACjB3E,QAAQ,QAAS,gEACjBM,WACCuE,EAAOlF,EAAK,wCACbK,QAAQ,QAASuE,GACjBjE,WACCwE,EAAO,gWAMPC,EAAW,gCACXC,EAAOrF,EAAK,+dASP,KACNK,QAAQ,UAAW+E,GACnB/E,QAAQ,MAAO8E,GACf9E,QAAQ,YAAa,4EACrBM,WACC2E,EAAYtF,EAAK8E,GAClBzE,QAAQ,KAAMqE,GACdrE,QAAQ,UAAW,yBACnBA,QAAQ,YAAa,IACrBA,QAAQ,SAAU,IAClBA,QAAQ,aAAc,WACtBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO8E,GACfxE,WACC4E,EAAavF,EAAK,2CACnBK,QAAQ,YAAaiF,GACrB3E,WAIC6E,EAAc,CAChBD,aACAE,KAAMjB,EACNS,MACAR,SACAE,UACAD,KACAW,OACAR,WACAK,OACAX,UACAe,YACAI,MAAO5F,EACP6F,KAAMZ,GAKJa,EAAW5F,EAAK,+JAGjBK,QAAQ,KAAMqE,GACdrE,QAAQ,UAAW,yBACnBA,QAAQ,aAAc,WACtBA,QAAQ,OAAQ,2BAChBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO8E,GACfxE,WACCkF,EAAW,IACVL,EACHE,MAAOE,EACPN,UAAWtF,EAAK8E,GACXzE,QAAQ,KAAMqE,GACdrE,QAAQ,UAAW,yBACnBA,QAAQ,YAAa,IACrBA,QAAQ,QAASuF,GACjBvF,QAAQ,aAAc,WACtBA,QAAQ,SAAU,kDAClBA,QAAQ,OAAQ,0BAChBA,QAAQ,OAAQ,+DAChBA,QAAQ,MAAO8E,GACfxE,YAKHmF,EAAgB,IACfN,EACHH,KAAMrF,EAAK,8IAGNK,QAAQ,UAAW+E,GACnB/E,QAAQ,OAAQ,qKAIhBM,WACLsE,IAAK,oEACLN,QAAS,yBACTF,OAAQ3E,EACR+E,SAAU,mCACVS,UAAWtF,EAAK8E,GACXzE,QAAQ,KAAMqE,GACdrE,QAAQ,UAAW,mBACnBA,QAAQ,WAAYwE,GACpBxE,QAAQ,SAAU,IAClBA,QAAQ,aAAc,WACtBA,QAAQ,UAAW,IACnBA,QAAQ,QAAS,IACjBA,QAAQ,QAAS,IACjBA,QAAQ,OAAQ,IAChBM,YAKHoF,EAAS,8CACTC,EAAa,sCACbC,EAAK,wBACLC,EAAa,8EAEbC,EAAe,gBACfC,EAAsB,kBACtBC,GAAyB,mBACzBC,GAActG,EAAK,wBAAyB,KAC7CK,QAAQ,cAAe+F,GAAqBzF,WAE3C4F,GAAY,gFACZC,GAAiBxG,EAAK,gEAAiE,KACxFK,QAAQ,SAAU8F,GAClBxF,WACC8F,GAAoBzG,EAAK,wQAOgB,MAC1CK,QAAQ,iBAAkBgG,IAC1BhG,QAAQ,cAAe+F,GACvB/F,QAAQ,SAAU8F,GAClBxF,WAEC+F,GAAoB1G,EAAK,mNAMQ,MAClCK,QAAQ,iBAAkBgG,IAC1BhG,QAAQ,cAAe+F,GACvB/F,QAAQ,SAAU8F,GAClBxF,WACCgG,GAAiB3G,EAAK,YAAa,MACpCK,QAAQ,SAAU8F,GAClBxF,WACCiG,GAAW5G,EAAK,uCACjBK,QAAQ,SAAU,gCAClBA,QAAQ,QAAS,gJACjBM,WACCkG,GAAiB7G,EAAKoF,GAAU/E,QAAQ,eAAa,UAAOM,WAC5DmG,GAAM9G,EAAK,4JAMZK,QAAQ,UAAWwG,IACnBxG,QAAQ,YAAa,+EACrBM,WACCoG,GAAe,sDACfC,GAAOhH,EAAK,iDACbK,QAAQ,QAAS0G,IACjB1G,QAAQ,OAAQ,wCAChBA,QAAQ,QAAS,+DACjBM,WACCsG,GAAUjH,EAAK,2BAChBK,QAAQ,QAAS0G,IACjB1G,QAAQ,MAAO2E,GACfrE,WACCuG,GAASlH,EAAK,yBACfK,QAAQ,MAAO2E,GACfrE,WACCwG,GAAgBnH,EAAK,wBAAyB,KAC/CK,QAAQ,UAAW4G,IACnB5G,QAAQ,SAAU6G,IAClBvG,WAICyG,GAAe,CACjBC,WAAYvH,EACZ6G,kBACAC,YACAL,aACAN,KACAR,KAAMO,EACNsB,IAAKxH,EACL0G,kBACAC,qBACAC,qBACJa,OAAIxB,EACAiB,KAAI,GACJE,UACAZ,eACAW,WACAE,iBACAL,OACAnB,KAAMO,EACNsB,IAAK1H,GAKH2H,GAAiB,IAChBL,GACHJ,KAAMhH,EAAK,2BACNK,QAAQ,QAAS0G,IACjBpG,WACLsG,QAASjH,EAAK,iCACTK,QAAQ,QAAS0G,IACjBpG,YAKH+G,GAAY,IACXN,GACHG,OAAQvH,EAAK+F,GAAQ1F,QAAQ,KAAM,QAAQM,WAC3C6G,IAAKxH,EAAK,mEAAoE,KACzEK,QAAQ,QAAS,6EACjBM,WACL0G,WAAY,6EACZC,IAAK,gEACL3B,KAAM,8NAKJgC,GAAe,IACdD,GACHzB,GAAIjG,EAAKiG,GAAI5F,QAAQ,OAAQ,KAAKM,WAClCgF,KAAM3F,EAAK0H,GAAU/B,MAChBtF,QAAQ,OAAQ,iBAChBA,QAAQ,UAAW,KACnBM,YAKIiH,GAAQ,CACjBC,OAAQrC,EACRpG,IAAKyG,EACLvG,SAAUwG,GAEDgC,GAAS,CAClBD,OAAQT,GACRhI,IAAKsI,GACLxI,OAAQyI,GACRrI,SAAUmI,ICtWRM,GAAqB,CACvB,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,SACL,IAAK,SAEHC,GAAwBC,GAAOF,GAAmBE,GACjD,SAASV,GAAOlC,EAAM6C,GACzB,GAAIA,GACA,GAAIzH,EAAMwC,WAAWkF,KAAK9C,GACtB,OAAOA,EAAKhF,QAAQI,EAAMyC,cAAe8E,SAI7C,GAAIvH,EAAM0C,mBAAmBgF,KAAK9C,GAC9B,OAAOA,EAAKhF,QAAQI,EAAM2C,sBAAuB4E,IAGzD,OAAO3C,CACX,CAeO,SAAS+C,GAASC,GACrB,IACIA,EAAOC,UAAUD,GAAMhI,QAAQI,EAAM6C,cAAe,IAC5D,CACI,MACI,OAAO,IACf,CACI,OAAO+E,CACX,CACO,SAASE,GAAWC,EAAUC,GAGjC,MAAMC,EAAMF,EAASnI,QAAQI,EAAM8C,UAAU,CAACoF,EAAOC,EAAQC,KACzD,IAAIC,GAAU,EACVC,EAAOH,EACX,QAASG,GAAQ,GAAmB,OAAdF,EAAIE,GACtBD,GAAWA,EACf,OAAIA,EAGO,IAIA,IACnB,IACQE,EAAQN,EAAIO,MAAMxI,EAAM+C,WAC5B,IAAI0F,EAAI,EAQR,GANKF,EAAM,GAAGG,QACVH,EAAMI,QAENJ,EAAMnP,OAAS,IAAMmP,EAAMK,IAAI,IAAIF,QACnCH,EAAMM,MAENb,EACA,GAAIO,EAAMnP,OAAS4O,EACfO,EAAMO,OAAOd,QAGb,MAAOO,EAAMnP,OAAS4O,EAClBO,EAAM3Q,KAAK,IAGvB,KAAO6Q,EAAIF,EAAMnP,OAAQqP,IAErBF,EAAME,GAAKF,EAAME,GAAGC,OAAO9I,QAAQI,EAAMgD,UAAW,KAExD,OAAOuF,CACX,CASO,SAASQ,GAAMX,EAAKY,EAAGC,GAC1B,MAAMC,EAAId,EAAIhP,OACd,GAAU,IAAN8P,EACA,MAAO,GAGX,IAAIC,EAAU,EAEd,MAAOA,EAAUD,EAAG,CAChB,MAAME,EAAWhB,EAAIiB,OAAOH,EAAIC,EAAU,GAC1C,GAAIC,IAAaJ,GAAMC,EAGlB,IAAIG,IAAaJ,IAAKC,EAIvB,MAHAE,GAIZ,MAPYA,GAQZ,CACI,OAAOf,EAAIkB,MAAM,EAAGJ,EAAIC,EAC5B,CACO,SAASI,GAAmBnB,EAAKoB,GACpC,IAA2B,IAAvBpB,EAAIqB,QAAQD,EAAE,IACd,OAAQ,EAEZ,IAAIE,EAAQ,EACZ,IAAK,IAAIjB,EAAI,EAAGA,EAAIL,EAAIhP,OAAQqP,IAC5B,GAAe,OAAXL,EAAIK,GACJA,SAEC,GAAIL,EAAIK,KAAOe,EAAE,GAClBE,SAEC,GAAItB,EAAIK,KAAOe,EAAE,KAClBE,IACIA,EAAQ,GACR,OAAOjB,EAInB,OAAQ,CACZ,CCzIA,SAASkB,GAAWC,EAAKrD,EAAMsD,EAAKC,EAAOC,GACvC,MAAMnC,EAAOrB,EAAKqB,KACZxM,EAAQmL,EAAKnL,OAAS,KACtB8J,EAAO0E,EAAI,GAAGhK,QAAQmK,EAAM/J,MAAMK,kBAAmB,MAC3D,GAAyB,MAArBuJ,EAAI,GAAGP,OAAO,GAAY,CAC1BS,EAAME,MAAMC,QAAS,EACrB,MAAMC,EAAQ,CACVC,KAAM,OACNN,MACAjC,OACAxM,QACA8J,OACAkF,OAAQN,EAAMO,aAAanF,IAG/B,OADA4E,EAAME,MAAMC,QAAS,EACdC,CACf,CACI,MAAO,CACHC,KAAM,QACNN,MACAjC,OACAxM,QACA8J,OAER,CACA,SAAS5E,GAAuBuJ,EAAK3E,EAAM6E,GACvC,MAAMO,EAAoBT,EAAI3B,MAAM6B,EAAM/J,MAAMM,wBAChD,GAA0B,OAAtBgK,EACA,OAAOpF,EAEX,MAAMqF,EAAeD,EAAkB,GACvC,OAAOpF,EACFsD,MAAM,MACNgC,KAAIC,IACL,MAAMC,EAAoBD,EAAKvC,MAAM6B,EAAM/J,MAAMO,gBACjD,GAA0B,OAAtBmK,EACA,OAAOD,EAEX,MAAOE,GAAgBD,EACvB,OAAIC,EAAavR,QAAUmR,EAAanR,OAC7BqR,EAAKnB,MAAMiB,EAAanR,QAE5BqR,CAAI,IAEVG,KAAK,KACd,CAIO,MAAMC,GAITC,WAAAA,CAAYC,IAASC,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,sBAFfA,EAAAA,EAAAA,GAAA,qBAGFC,KAAKF,QAAUA,GAAW7L,CAClC,CACIgM,KAAAA,CAAMC,GACF,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMrD,QAAQxE,KAAK6L,GAC1C,GAAIvB,GAAOA,EAAI,GAAGxQ,OAAS,EACvB,MAAO,CACH+Q,KAAM,QACNN,IAAKD,EAAI,GAGzB,CACI5E,IAAAA,CAAKmG,GACD,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMnC,KAAK1F,KAAK6L,GACvC,GAAIvB,EAAK,CACL,MAAM1E,EAAO0E,EAAI,GAAGhK,QAAQqL,KAAKlB,MAAM/J,MAAMI,iBAAkB,IAC/D,MAAO,CACH+J,KAAM,OACNN,IAAKD,EAAI,GACTwB,eAAgB,WAChBlG,KAAO+F,KAAKF,QAAQlM,SAEdqG,EADA6D,GAAM7D,EAAM,MAGlC,CACA,CACIlB,MAAAA,CAAOmH,GACH,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMnD,OAAO1E,KAAK6L,GACzC,GAAIvB,EAAK,CACL,MAAMC,EAAMD,EAAI,GACV1E,EAAO5E,GAAuBuJ,EAAKD,EAAI,IAAM,GAAIqB,KAAKlB,OAC5D,MAAO,CACHI,KAAM,OACNN,MACAwB,KAAMzB,EAAI,GAAKA,EAAI,GAAGlB,OAAO9I,QAAQqL,KAAKlB,MAAM1C,OAAOnB,eAAgB,MAAQ0D,EAAI,GACnF1E,OAEhB,CACA,CACIhB,OAAAA,CAAQiH,GACJ,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMjD,QAAQ5E,KAAK6L,GAC1C,GAAIvB,EAAK,CACL,IAAI1E,EAAO0E,EAAI,GAAGlB,OAElB,GAAIuC,KAAKlB,MAAM/J,MAAMQ,WAAWkH,KAAKxC,GAAO,CACxC,MAAMoG,EAAUvC,GAAM7D,EAAM,KACxB+F,KAAKF,QAAQlM,SACbqG,EAAOoG,EAAQ5C,OAET4C,IAAWL,KAAKlB,MAAM/J,MAAMU,gBAAgBgH,KAAK4D,KAEvDpG,EAAOoG,EAAQ5C,OAEnC,CACY,MAAO,CACHyB,KAAM,UACNN,IAAKD,EAAI,GACT2B,MAAO3B,EAAI,GAAGxQ,OACd8L,OACAkF,OAAQa,KAAKnB,MAAMzC,OAAOnC,GAE1C,CACA,CACIjB,EAAAA,CAAGkH,GACC,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMlD,GAAG3E,KAAK6L,GACrC,GAAIvB,EACA,MAAO,CACHO,KAAM,KACNN,IAAKd,GAAMa,EAAI,GAAI,MAGnC,CACI9E,UAAAA,CAAWqG,GACP,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMrC,WAAWxF,KAAK6L,GAC7C,GAAIvB,EAAK,CACL,IAAI4B,EAAQzC,GAAMa,EAAI,GAAI,MAAMpB,MAAM,MAClCqB,EAAM,GACN3E,EAAO,GACX,MAAMkF,EAAS,GACf,MAAOoB,EAAMpS,OAAS,EAAG,CACrB,IAAIqS,GAAe,EACnB,MAAMC,EAAe,GACrB,IAAIjD,EACJ,IAAKA,EAAI,EAAGA,EAAI+C,EAAMpS,OAAQqP,IAE1B,GAAIwC,KAAKlB,MAAM/J,MAAMiB,gBAAgByG,KAAK8D,EAAM/C,IAC5CiD,EAAa9T,KAAK4T,EAAM/C,IACxBgD,GAAe,MAEd,IAAKA,EAIN,MAHAC,EAAa9T,KAAK4T,EAAM/C,GAIhD,CAEgB+C,EAAQA,EAAMlC,MAAMb,GACpB,MAAMkD,EAAaD,EAAad,KAAK,MAC/BgB,EAAcD,EAEf/L,QAAQqL,KAAKlB,MAAM/J,MAAMkB,wBAAyB,YAClDtB,QAAQqL,KAAKlB,MAAM/J,MAAMmB,yBAA0B,IACxD0I,EAAMA,EAAM,GAAGA,MAAQ8B,IAAeA,EACtCzG,EAAOA,EAAO,GAAGA,MAAS0G,IAAgBA,EAG1C,MAAMC,EAAMZ,KAAKnB,MAAME,MAAM6B,IAK7B,GAJAZ,KAAKnB,MAAME,MAAM6B,KAAM,EACvBZ,KAAKnB,MAAMgC,YAAYF,EAAaxB,GAAQ,GAC5Ca,KAAKnB,MAAME,MAAM6B,IAAMA,EAEF,IAAjBL,EAAMpS,OACN,MAEJ,MAAM2S,EAAY3B,EAAOxB,IAAI,GAC7B,GAAwB,SAApBmD,GAAW5B,KAEX,MAEC,GAAwB,eAApB4B,GAAW5B,KAAuB,CAEvC,MAAM6B,EAAWD,EACXE,EAAUD,EAASnC,IAAM,KAAO2B,EAAMZ,KAAK,MAC3CsB,EAAWjB,KAAKnG,WAAWmH,GACjC7B,EAAOA,EAAOhR,OAAS,GAAK8S,EAC5BrC,EAAMA,EAAIsC,UAAU,EAAGtC,EAAIzQ,OAAS4S,EAASnC,IAAIzQ,QAAU8S,EAASrC,IACpE3E,EAAOA,EAAKiH,UAAU,EAAGjH,EAAK9L,OAAS4S,EAAS9G,KAAK9L,QAAU8S,EAAShH,KACxE,KACpB,CACqB,GAAwB,SAApB6G,GAAW5B,UAAf,CAED,MAAM6B,EAAWD,EACXE,EAAUD,EAASnC,IAAM,KAAO2B,EAAMZ,KAAK,MAC3CsB,EAAWjB,KAAKxG,KAAKwH,GAC3B7B,EAAOA,EAAOhR,OAAS,GAAK8S,EAC5BrC,EAAMA,EAAIsC,UAAU,EAAGtC,EAAIzQ,OAAS2S,EAAUlC,IAAIzQ,QAAU8S,EAASrC,IACrE3E,EAAOA,EAAKiH,UAAU,EAAGjH,EAAK9L,OAAS4S,EAASnC,IAAIzQ,QAAU8S,EAASrC,IACvE2B,EAAQS,EAAQE,UAAU/B,EAAOxB,IAAI,GAAGiB,IAAIzQ,QAAQoP,MAAM,KAE9E,CACA,CACY,MAAO,CACH2B,KAAM,aACNN,MACAO,SACAlF,OAEhB,CACA,CACIT,IAAAA,CAAK0G,GACD,IAAIvB,EAAMqB,KAAKlB,MAAM5C,MAAM1C,KAAKnF,KAAK6L,GACrC,GAAIvB,EAAK,CACL,IAAItG,EAAOsG,EAAI,GAAGlB,OAClB,MAAM0D,EAAY9I,EAAKlK,OAAS,EAC1BqL,EAAO,CACT0F,KAAM,OACNN,IAAK,GACLwC,QAASD,EACTE,MAAOF,GAAa9I,EAAKgG,MAAM,GAAI,GAAK,GACxCiD,OAAO,EACPC,MAAO,IAEXlJ,EAAO8I,EAAY,aAAa9I,EAAKgG,OAAO,KAAO,KAAKhG,IACpD2H,KAAKF,QAAQlM,WACbyE,EAAO8I,EAAY9I,EAAO,SAG9B,MAAMmJ,EAAYxB,KAAKlB,MAAM/J,MAAMqD,cAAcC,GACjD,IAAIoJ,GAAoB,EAExB,MAAOvB,EAAK,CACR,IAAIwB,GAAW,EACX9C,EAAM,GACN+C,EAAe,GACnB,KAAMhD,EAAM6C,EAAUnN,KAAK6L,IACvB,MAEJ,GAAIF,KAAKlB,MAAM5C,MAAMlD,GAAGyD,KAAKyD,GACzB,MAEJtB,EAAMD,EAAI,GACVuB,EAAMA,EAAIgB,UAAUtC,EAAIzQ,QACxB,IAAIyT,EAAOjD,EAAI,GAAGpB,MAAM,KAAM,GAAG,GAAG5I,QAAQqL,KAAKlB,MAAM/J,MAAMoB,iBAAkB0L,GAAM,IAAIC,OAAO,EAAID,EAAE1T,UAClG4T,EAAW7B,EAAI3C,MAAM,KAAM,GAAG,GAC9BzH,GAAa8L,EAAKnE,OAClBlF,EAAS,EAmBb,GAlBIyH,KAAKF,QAAQlM,UACb2E,EAAS,EACToJ,EAAeC,EAAKI,aAEflM,EACLyC,EAASoG,EAAI,GAAGxQ,OAAS,GAGzBoK,EAASoG,EAAI,GAAGsD,OAAOjC,KAAKlB,MAAM/J,MAAMW,cACxC6C,EAASA,EAAS,EAAI,EAAIA,EAC1BoJ,EAAeC,EAAKvD,MAAM9F,GAC1BA,GAAUoG,EAAI,GAAGxQ,QAEjB2H,GAAakK,KAAKlB,MAAM/J,MAAMe,UAAU2G,KAAKsF,KAC7CnD,GAAOmD,EAAW,KAClB7B,EAAMA,EAAIgB,UAAUa,EAAS5T,OAAS,GACtCuT,GAAW,IAEVA,EAAU,CACX,MAAMpJ,EAAkB0H,KAAKlB,MAAM/J,MAAMuD,gBAAgBC,GACnDE,EAAUuH,KAAKlB,MAAM/J,MAAM0D,QAAQF,GACnCG,EAAmBsH,KAAKlB,MAAM/J,MAAM2D,iBAAiBH,GACrDI,EAAoBqH,KAAKlB,MAAM/J,MAAM4D,kBAAkBJ,GACvDK,EAAiBoH,KAAKlB,MAAM/J,MAAM6D,eAAeL,GAEvD,MAAO2H,EAAK,CACR,MAAMgC,EAAUhC,EAAI3C,MAAM,KAAM,GAAG,GACnC,IAAI4E,EAWJ,GAVAJ,EAAWG,EAEPlC,KAAKF,QAAQlM,UACbmO,EAAWA,EAASpN,QAAQqL,KAAKlB,MAAM/J,MAAMqB,mBAAoB,MACjE+L,EAAsBJ,GAGtBI,EAAsBJ,EAASpN,QAAQqL,KAAKlB,MAAM/J,MAAMa,cAAe,QAGvE8C,EAAiB+D,KAAKsF,GACtB,MAGJ,GAAIpJ,EAAkB8D,KAAKsF,GACvB,MAGJ,GAAInJ,EAAe6D,KAAKsF,GACpB,MAGJ,GAAIzJ,EAAgBmE,KAAKsF,GACrB,MAGJ,GAAItJ,EAAQgE,KAAKsF,GACb,MAEJ,GAAII,EAAoBF,OAAOjC,KAAKlB,MAAM/J,MAAMW,eAAiB6C,IAAWwJ,EAAStE,OACjFkE,GAAgB,KAAOQ,EAAoB9D,MAAM9F,OAEhD,CAED,GAAIzC,EACA,MAGJ,GAAI8L,EAAKjN,QAAQqL,KAAKlB,MAAM/J,MAAMa,cAAe,QAAQqM,OAAOjC,KAAKlB,MAAM/J,MAAMW,eAAiB,EAC9F,MAEJ,GAAIgD,EAAiB+D,KAAKmF,GACtB,MAEJ,GAAIjJ,EAAkB8D,KAAKmF,GACvB,MAEJ,GAAInJ,EAAQgE,KAAKmF,GACb,MAEJD,GAAgB,KAAOI,CACnD,CAC6BjM,GAAciM,EAAStE,SACxB3H,GAAY,GAEhB8I,GAAOsD,EAAU,KACjBhC,EAAMA,EAAIgB,UAAUgB,EAAQ/T,OAAS,GACrCyT,EAAOO,EAAoB9D,MAAM9F,EACzD,CACA,CACqBiB,EAAK8H,QAEFG,EACAjI,EAAK8H,OAAQ,EAERtB,KAAKlB,MAAM/J,MAAMgB,gBAAgB0G,KAAKmC,KAC3C6C,GAAoB,IAG5B,IACIW,EADAC,EAAS,KAGTrC,KAAKF,QAAQpM,MACb2O,EAASrC,KAAKlB,MAAM/J,MAAMsB,WAAWhC,KAAKsN,GACtCU,IACAD,EAA0B,SAAdC,EAAO,GACnBV,EAAeA,EAAahN,QAAQqL,KAAKlB,MAAM/J,MAAMuB,gBAAiB,MAG9EkD,EAAK+H,MAAM5U,KAAK,CACZuS,KAAM,YACNN,MACA0D,OAAQD,EACRE,QAASH,EACTd,OAAO,EACPrH,KAAM0H,EACNxC,OAAQ,KAEZ3F,EAAKoF,KAAOA,CAC5B,CAEY,MAAM4D,EAAWhJ,EAAK+H,MAAM5D,IAAI,GAC5B6E,IACAA,EAAS5D,IAAM4D,EAAS5D,IAAI6D,UAC5BD,EAASvI,KAAOuI,EAASvI,KAAKwI,WAElCjJ,EAAKoF,IAAMpF,EAAKoF,IAAI6D,UAEpB,IAAK,IAAIjF,EAAI,EAAGA,EAAIhE,EAAK+H,MAAMpT,OAAQqP,IAGnC,GAFAwC,KAAKnB,MAAME,MAAM6B,KAAM,EACvBpH,EAAK+H,MAAM/D,GAAG2B,OAASa,KAAKnB,MAAMgC,YAAYrH,EAAK+H,MAAM/D,GAAGvD,KAAM,KAC7DT,EAAK8H,MAAO,CAEb,MAAMoB,EAAUlJ,EAAK+H,MAAM/D,GAAG2B,OAAOwD,QAAOd,GAAgB,UAAXA,EAAE3C,OAC7C0D,EAAwBF,EAAQvU,OAAS,GAAKuU,EAAQG,MAAKhB,GAAK7B,KAAKlB,MAAM/J,MAAMwB,QAAQkG,KAAKoF,EAAEjD,OACtGpF,EAAK8H,MAAQsB,CACjC,CAGY,GAAIpJ,EAAK8H,MACL,IAAK,IAAI9D,EAAI,EAAGA,EAAIhE,EAAK+H,MAAMpT,OAAQqP,IACnChE,EAAK+H,MAAM/D,GAAG8D,OAAQ,EAG9B,OAAO9H,CACnB,CACA,CACIG,IAAAA,CAAKuG,GACD,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMvC,KAAKtF,KAAK6L,GACvC,GAAIvB,EAAK,CACL,MAAMM,EAAQ,CACVC,KAAM,OACNhD,OAAO,EACP0C,IAAKD,EAAI,GACTmE,IAAgB,QAAXnE,EAAI,IAA2B,WAAXA,EAAI,IAA8B,UAAXA,EAAI,GACpD1E,KAAM0E,EAAI,IAEd,OAAOM,CACnB,CACA,CACI1F,GAAAA,CAAI2G,GACA,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAM3C,IAAIlF,KAAK6L,GACtC,GAAIvB,EAAK,CACL,MAAMvD,EAAMuD,EAAI,GAAGoE,cAAcpO,QAAQqL,KAAKlB,MAAM/J,MAAMc,oBAAqB,KACzE8G,EAAOgC,EAAI,GAAKA,EAAI,GAAGhK,QAAQqL,KAAKlB,MAAM/J,MAAMyB,aAAc,MAAM7B,QAAQqL,KAAKlB,MAAM1C,OAAOnB,eAAgB,MAAQ,GACtH9K,EAAQwO,EAAI,GAAKA,EAAI,GAAGuC,UAAU,EAAGvC,EAAI,GAAGxQ,OAAS,GAAGwG,QAAQqL,KAAKlB,MAAM1C,OAAOnB,eAAgB,MAAQ0D,EAAI,GACpH,MAAO,CACHO,KAAM,MACN9D,MACAwD,IAAKD,EAAI,GACThC,OACAxM,QAEhB,CACA,CACI6J,KAAAA,CAAMkG,GACF,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMlC,MAAM3F,KAAK6L,GACxC,IAAKvB,EACD,OAEJ,IAAKqB,KAAKlB,MAAM/J,MAAM0B,eAAegG,KAAKkC,EAAI,IAE1C,OAEJ,MAAMqE,EAAUnG,GAAW8B,EAAI,IACzBsE,EAAStE,EAAI,GAAGhK,QAAQqL,KAAKlB,MAAM/J,MAAM2B,gBAAiB,IAAI6G,MAAM,KACpE1K,EAAO8L,EAAI,IAAIlB,OAASkB,EAAI,GAAGhK,QAAQqL,KAAKlB,MAAM/J,MAAM4B,kBAAmB,IAAI4G,MAAM,MAAQ,GAC7F5M,EAAO,CACTuO,KAAM,QACNN,IAAKD,EAAI,GACTuE,OAAQ,GACRC,MAAO,GACPtQ,KAAM,IAEV,GAAImQ,EAAQ7U,SAAW8U,EAAO9U,OAA9B,CAIA,IAAK,MAAMgV,KAASF,EACZjD,KAAKlB,MAAM/J,MAAM6B,gBAAgB6F,KAAK0G,GACtCxS,EAAKwS,MAAMxW,KAAK,SAEXqT,KAAKlB,MAAM/J,MAAM8B,iBAAiB4F,KAAK0G,GAC5CxS,EAAKwS,MAAMxW,KAAK,UAEXqT,KAAKlB,MAAM/J,MAAM+B,eAAe2F,KAAK0G,GAC1CxS,EAAKwS,MAAMxW,KAAK,QAGhBgE,EAAKwS,MAAMxW,KAAK,MAGxB,IAAK,IAAI6Q,EAAI,EAAGA,EAAIwF,EAAQ7U,OAAQqP,IAChC7M,EAAKuS,OAAOvW,KAAK,CACbsN,KAAM+I,EAAQxF,GACd2B,OAAQa,KAAKnB,MAAMzC,OAAO4G,EAAQxF,IAClC0F,QAAQ,EACRC,MAAOxS,EAAKwS,MAAM3F,KAG1B,IAAK,MAAMR,KAAOnK,EACdlC,EAAKkC,KAAKlG,KAAKkQ,GAAWG,EAAKrM,EAAKuS,OAAO/U,QAAQoR,KAAI,CAAC6D,EAAM5F,KACnD,CACHvD,KAAMmJ,EACNjE,OAAQa,KAAKnB,MAAMzC,OAAOgH,GAC1BF,QAAQ,EACRC,MAAOxS,EAAKwS,MAAM3F,QAI9B,OAAO7M,CAjCf,CAkCA,CACIwI,QAAAA,CAAS+G,GACL,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAM/C,SAAS9E,KAAK6L,GAC3C,GAAIvB,EACA,MAAO,CACHO,KAAM,UACNN,IAAKD,EAAI,GACT2B,MAA4B,MAArB3B,EAAI,GAAGP,OAAO,GAAa,EAAI,EACtCnE,KAAM0E,EAAI,GACVQ,OAAQa,KAAKnB,MAAMzC,OAAOuC,EAAI,IAG9C,CACI/E,SAAAA,CAAUsG,GACN,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMtC,UAAUvF,KAAK6L,GAC5C,GAAIvB,EAAK,CACL,MAAM1E,EAA4C,OAArC0E,EAAI,GAAGP,OAAOO,EAAI,GAAGxQ,OAAS,GACrCwQ,EAAI,GAAGN,MAAM,GAAI,GACjBM,EAAI,GACV,MAAO,CACHO,KAAM,YACNN,IAAKD,EAAI,GACT1E,OACAkF,OAAQa,KAAKnB,MAAMzC,OAAOnC,GAE1C,CACA,CACIA,IAAAA,CAAKiG,GACD,MAAMvB,EAAMqB,KAAKlB,MAAM5C,MAAMjC,KAAK5F,KAAK6L,GACvC,GAAIvB,EACA,MAAO,CACHO,KAAM,OACNN,IAAKD,EAAI,GACT1E,KAAM0E,EAAI,GACVQ,OAAQa,KAAKnB,MAAMzC,OAAOuC,EAAI,IAG9C,CACI9C,MAAAA,CAAOqE,GACH,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAOP,OAAOxH,KAAK6L,GAC1C,GAAIvB,EACA,MAAO,CACHO,KAAM,SACNN,IAAKD,EAAI,GACT1E,KAAM0E,EAAI,GAG1B,CACIvD,GAAAA,CAAI8E,GACA,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAOhB,IAAI/G,KAAK6L,GACvC,GAAIvB,EAaA,OAZKqB,KAAKnB,MAAME,MAAMC,QAAUgB,KAAKlB,MAAM/J,MAAMgC,UAAU0F,KAAKkC,EAAI,IAChEqB,KAAKnB,MAAME,MAAMC,QAAS,EAErBgB,KAAKnB,MAAME,MAAMC,QAAUgB,KAAKlB,MAAM/J,MAAMiC,QAAQyF,KAAKkC,EAAI,MAClEqB,KAAKnB,MAAME,MAAMC,QAAS,IAEzBgB,KAAKnB,MAAME,MAAMsE,YAAcrD,KAAKlB,MAAM/J,MAAMkC,kBAAkBwF,KAAKkC,EAAI,IAC5EqB,KAAKnB,MAAME,MAAMsE,YAAa,EAEzBrD,KAAKnB,MAAME,MAAMsE,YAAcrD,KAAKlB,MAAM/J,MAAMmC,gBAAgBuF,KAAKkC,EAAI,MAC9EqB,KAAKnB,MAAME,MAAMsE,YAAa,GAE3B,CACHnE,KAAM,OACNN,IAAKD,EAAI,GACTK,OAAQgB,KAAKnB,MAAME,MAAMC,OACzBqE,WAAYrD,KAAKnB,MAAME,MAAMsE,WAC7BnH,OAAO,EACPjC,KAAM0E,EAAI,GAG1B,CACIrD,IAAAA,CAAK4E,GACD,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAOd,KAAKjH,KAAK6L,GACxC,GAAIvB,EAAK,CACL,MAAM2E,EAAa3E,EAAI,GAAGlB,OAC1B,IAAKuC,KAAKF,QAAQlM,UAAYoM,KAAKlB,MAAM/J,MAAMoC,kBAAkBsF,KAAK6G,GAAa,CAE/E,IAAMtD,KAAKlB,MAAM/J,MAAMqC,gBAAgBqF,KAAK6G,GACxC,OAGJ,MAAMC,EAAazF,GAAMwF,EAAWjF,MAAM,GAAI,GAAI,MAClD,IAAKiF,EAAWnV,OAASoV,EAAWpV,QAAU,IAAM,EAChD,MAEpB,KACiB,CAED,MAAMqV,EAAiBlF,GAAmBK,EAAI,GAAI,MAClD,GAAI6E,GAAkB,EAAG,CACrB,MAAMnC,EAAgC,IAAxB1C,EAAI,GAAGH,QAAQ,KAAa,EAAI,EACxCiF,EAAUpC,EAAQ1C,EAAI,GAAGxQ,OAASqV,EACxC7E,EAAI,GAAKA,EAAI,GAAGuC,UAAU,EAAGsC,GAC7B7E,EAAI,GAAKA,EAAI,GAAGuC,UAAU,EAAGuC,GAAShG,OACtCkB,EAAI,GAAK,EAC7B,CACA,CACY,IAAIhC,EAAOgC,EAAI,GACXxO,EAAQ,GACZ,GAAI6P,KAAKF,QAAQlM,SAAU,CAEvB,MAAM0H,EAAO0E,KAAKlB,MAAM/J,MAAMsC,kBAAkBhD,KAAKsI,GACjDrB,IACAqB,EAAOrB,EAAK,GACZnL,EAAQmL,EAAK,GAEjC,MAEgBnL,EAAQwO,EAAI,GAAKA,EAAI,GAAGN,MAAM,GAAI,GAAK,GAY3C,OAVA1B,EAAOA,EAAKc,OACRuC,KAAKlB,MAAM/J,MAAMoC,kBAAkBsF,KAAKE,KAGpCA,EAFAqD,KAAKF,QAAQlM,WAAcoM,KAAKlB,MAAM/J,MAAMqC,gBAAgBqF,KAAK6G,GAE1D3G,EAAK0B,MAAM,GAGX1B,EAAK0B,MAAM,GAAI,IAGvBK,GAAWC,EAAK,CACnBhC,KAAMA,EAAOA,EAAKhI,QAAQqL,KAAKlB,MAAM1C,OAAOnB,eAAgB,MAAQ0B,EACpExM,MAAOA,EAAQA,EAAMwE,QAAQqL,KAAKlB,MAAM1C,OAAOnB,eAAgB,MAAQ9K,GACxEwO,EAAI,GAAIqB,KAAKnB,MAAOmB,KAAKlB,MACxC,CACA,CACIvD,OAAAA,CAAQ2E,EAAKwD,GACT,IAAI/E,EACJ,IAAKA,EAAMqB,KAAKlB,MAAM1C,OAAOb,QAAQlH,KAAK6L,MAClCvB,EAAMqB,KAAKlB,MAAM1C,OAAOZ,OAAOnH,KAAK6L,IAAO,CAC/C,MAAMyD,GAAchF,EAAI,IAAMA,EAAI,IAAIhK,QAAQqL,KAAKlB,MAAM/J,MAAMc,oBAAqB,KAC9EyF,EAAOoI,EAAMC,EAAWZ,eAC9B,IAAKzH,EAAM,CACP,MAAMrB,EAAO0E,EAAI,GAAGP,OAAO,GAC3B,MAAO,CACHc,KAAM,OACNN,IAAK3E,EACLA,OAEpB,CACY,OAAOyE,GAAWC,EAAKrD,EAAMqD,EAAI,GAAIqB,KAAKnB,MAAOmB,KAAKlB,MAClE,CACA,CACI8E,QAAAA,CAAS1D,EAAK2D,EAAWC,EAAW,IAChC,IAAI7G,EAAQ+C,KAAKlB,MAAM1C,OAAOtB,eAAezG,KAAK6L,GAClD,IAAKjD,EACD,OAEJ,GAAIA,EAAM,IAAM6G,EAAS7G,MAAM+C,KAAKlB,MAAM/J,MAAMuC,qBAC5C,OACJ,MAAMyM,EAAW9G,EAAM,IAAMA,EAAM,IAAM,GACzC,IAAK8G,IAAaD,GAAY9D,KAAKlB,MAAM1C,OAAOxB,YAAYvG,KAAKyP,GAAW,CAExE,MAAME,EAAU,IAAI/G,EAAM,IAAI9O,OAAS,EACvC,IAAI8V,EAAQC,EAASC,EAAaH,EAASI,EAAgB,EAC3D,MAAMC,EAAyB,MAAhBpH,EAAM,GAAG,GAAa+C,KAAKlB,MAAM1C,OAAOrB,kBAAoBiF,KAAKlB,MAAM1C,OAAOpB,kBAC7FqJ,EAAOC,UAAY,EAEnBT,EAAYA,EAAUxF,OAAO,EAAI6B,EAAI/R,OAAS6V,GAC9C,MAA2C,OAAnC/G,EAAQoH,EAAOhQ,KAAKwP,IAAqB,CAE7C,GADAI,EAAShH,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IAAMA,EAAM,IACtEgH,EACD,SAEJ,GADAC,EAAU,IAAID,GAAQ9V,OAClB8O,EAAM,IAAMA,EAAM,GAAI,CACtBkH,GAAcD,EACd,QACpB,CACqB,IAAIjH,EAAM,IAAMA,EAAM,KACnB+G,EAAU,MAAQA,EAAUE,GAAW,GAAI,CAC3CE,GAAiBF,EACjB,QACxB,CAGgB,GADAC,GAAcD,EACVC,EAAa,EACb,SAEJD,EAAU1L,KAAK1H,IAAIoT,EAASA,EAAUC,EAAaC,GAEnD,MAAMG,EAAiB,IAAItH,EAAM,IAAI,GAAG9O,OAClCyQ,EAAMsB,EAAI7B,MAAM,EAAG2F,EAAU/G,EAAMlK,MAAQwR,EAAiBL,GAElE,GAAI1L,KAAK1H,IAAIkT,EAASE,GAAW,EAAG,CAChC,MAAMjK,EAAO2E,EAAIP,MAAM,GAAI,GAC3B,MAAO,CACHa,KAAM,KACNN,MACA3E,OACAkF,OAAQa,KAAKnB,MAAMO,aAAanF,GAExD,CAEgB,MAAMA,EAAO2E,EAAIP,MAAM,GAAI,GAC3B,MAAO,CACHa,KAAM,SACNN,MACA3E,OACAkF,OAAQa,KAAKnB,MAAMO,aAAanF,GAEpD,CACA,CACA,CACIuK,QAAAA,CAAStE,GACL,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAOrC,KAAK1F,KAAK6L,GACxC,GAAIvB,EAAK,CACL,IAAI1E,EAAO0E,EAAI,GAAGhK,QAAQqL,KAAKlB,MAAM/J,MAAMY,kBAAmB,KAC9D,MAAM8O,EAAmBzE,KAAKlB,MAAM/J,MAAMW,aAAa+G,KAAKxC,GACtDyK,EAA0B1E,KAAKlB,MAAM/J,MAAMS,kBAAkBiH,KAAKxC,IAAS+F,KAAKlB,MAAM/J,MAAMU,gBAAgBgH,KAAKxC,GAIvH,OAHIwK,GAAoBC,IACpBzK,EAAOA,EAAKiH,UAAU,EAAGjH,EAAK9L,OAAS,IAEpC,CACH+Q,KAAM,WACNN,IAAKD,EAAI,GACT1E,OAEhB,CACA,CACIM,EAAAA,CAAG2F,GACC,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAO7B,GAAGlG,KAAK6L,GACtC,GAAIvB,EACA,MAAO,CACHO,KAAM,KACNN,IAAKD,EAAI,GAGzB,CACI/C,GAAAA,CAAIsE,GACA,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAOR,IAAIvH,KAAK6L,GACvC,GAAIvB,EACA,MAAO,CACHO,KAAM,MACNN,IAAKD,EAAI,GACT1E,KAAM0E,EAAI,GACVQ,OAAQa,KAAKnB,MAAMO,aAAaT,EAAI,IAGpD,CACIzD,QAAAA,CAASgF,GACL,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAOlB,SAAS7G,KAAK6L,GAC5C,GAAIvB,EAAK,CACL,IAAI1E,EAAM0C,EASV,MARe,MAAXgC,EAAI,IACJ1E,EAAO0E,EAAI,GACXhC,EAAO,UAAY1C,IAGnBA,EAAO0E,EAAI,GACXhC,EAAO1C,GAEJ,CACHiF,KAAM,OACNN,IAAKD,EAAI,GACT1E,OACA0C,OACAwC,OAAQ,CACJ,CACID,KAAM,OACNN,IAAK3E,EACLA,SAIxB,CACA,CACI6B,GAAAA,CAAIoE,GACA,IAAIvB,EACJ,GAAIA,EAAMqB,KAAKlB,MAAM1C,OAAON,IAAIzH,KAAK6L,GAAM,CACvC,IAAIjG,EAAM0C,EACV,GAAe,MAAXgC,EAAI,GACJ1E,EAAO0E,EAAI,GACXhC,EAAO,UAAY1C,MAElB,CAED,IAAI0K,EACJ,GACIA,EAAchG,EAAI,GAClBA,EAAI,GAAKqB,KAAKlB,MAAM1C,OAAOT,WAAWtH,KAAKsK,EAAI,MAAM,IAAM,SACtDgG,IAAgBhG,EAAI,IAC7B1E,EAAO0E,EAAI,GAEPhC,EADW,SAAXgC,EAAI,GACG,UAAYA,EAAI,GAGhBA,EAAI,EAE/B,CACY,MAAO,CACHO,KAAM,OACNN,IAAKD,EAAI,GACT1E,OACA0C,OACAwC,OAAQ,CACJ,CACID,KAAM,OACNN,IAAK3E,EACLA,SAIxB,CACA,CACIO,UAAAA,CAAW0F,GACP,MAAMvB,EAAMqB,KAAKlB,MAAM1C,OAAOnC,KAAK5F,KAAK6L,GACxC,GAAIvB,EAAK,CACL,MAAMvB,EAAU4C,KAAKnB,MAAME,MAAMsE,WACjC,MAAO,CACHnE,KAAM,OACNN,IAAKD,EAAI,GACT1E,KAAM0E,EAAI,GACVvB,UAEhB,CACA,EC7wBO,MAAMwH,GAMT/E,WAAAA,CAAYC,IAASC,EAAAA,EAAAA,GAAA,uBAAAA,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,sBAAAA,EAAAA,EAAAA,GAAA,0BAAAA,EAAAA,EAAAA,GAAA,2BAEjBC,KAAKb,OAAS,GACda,KAAKb,OAAOuE,MAAQmB,OAAOC,OAAO,MAClC9E,KAAKF,QAAUA,GAAW7L,EAC1B+L,KAAKF,QAAQ/L,UAAYiM,KAAKF,QAAQ/L,WAAa,IAAI6L,GACvDI,KAAKjM,UAAYiM,KAAKF,QAAQ/L,UAC9BiM,KAAKjM,UAAU+L,QAAUE,KAAKF,QAC9BE,KAAKjM,UAAU8K,MAAQmB,KACvBA,KAAK+E,YAAc,GACnB/E,KAAKjB,MAAQ,CACTC,QAAQ,EACRqE,YAAY,EACZzC,KAAK,GAET,MAAM9B,EAAQ,CACV/J,QACAmH,MAAOA,GAAMC,OACbC,OAAQA,GAAOD,QAEf6D,KAAKF,QAAQlM,UACbkL,EAAM5C,MAAQA,GAAMtI,SACpBkL,EAAM1C,OAASA,GAAOxI,UAEjBoM,KAAKF,QAAQpM,MAClBoL,EAAM5C,MAAQA,GAAMxI,IAChBsM,KAAKF,QAAQtM,OACbsL,EAAM1C,OAASA,GAAO5I,OAGtBsL,EAAM1C,OAASA,GAAO1I,KAG9BsM,KAAKjM,UAAU+K,MAAQA,CAC/B,CAII,gBAAWA,GACP,MAAO,CACH5C,SACAE,UAEZ,CAII,UAAO4I,CAAI9E,EAAKJ,GACZ,MAAMjB,EAAQ,IAAI+F,GAAO9E,GACzB,OAAOjB,EAAMmG,IAAI9E,EACzB,CAII,gBAAO+E,CAAU/E,EAAKJ,GAClB,MAAMjB,EAAQ,IAAI+F,GAAO9E,GACzB,OAAOjB,EAAMO,aAAac,EAClC,CAII8E,GAAAA,CAAI9E,GACAA,EAAMA,EAAIvL,QAAQI,EAAMiD,eAAgB,MACxCgI,KAAKa,YAAYX,EAAKF,KAAKb,QAC3B,IAAK,IAAI3B,EAAI,EAAGA,EAAIwC,KAAK+E,YAAY5W,OAAQqP,IAAK,CAC9C,MAAM0H,EAAOlF,KAAK+E,YAAYvH,GAC9BwC,KAAKZ,aAAa8F,EAAKhF,IAAKgF,EAAK/F,OAC7C,CAEQ,OADAa,KAAK+E,YAAc,GACZ/E,KAAKb,MACpB,CACI0B,WAAAA,CAAYX,EAAKf,EAAS,GAAIgG,GAAuB,GAC7CnF,KAAKF,QAAQlM,WACbsM,EAAMA,EAAIvL,QAAQI,EAAMa,cAAe,QAAQjB,QAAQI,EAAMkD,UAAW,KAE5E,MAAOiI,EAAK,CACR,IAAIjB,EACJ,GAAIe,KAAKF,QAAQrM,YAAYyI,OAAO2G,MAAMuC,MAClCnG,EAAQmG,EAAaC,KAAK,CAAExG,MAAOmB,MAAQE,EAAKf,MAChDe,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,IACL,KAIX,SAGJ,GAAIA,EAAQe,KAAKjM,UAAUkM,MAAMC,GAAM,CACnCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9B,MAAM2S,EAAY3B,EAAOxB,IAAI,GACJ,IAArBsB,EAAML,IAAIzQ,aAA8BmX,IAAdxE,EAG1BA,EAAUlC,KAAO,KAGjBO,EAAOxS,KAAKsS,GAEhB,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUgG,KAAKmG,GAAM,CAClCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9B,MAAM2S,EAAY3B,EAAOxB,IAAI,GAEL,cAApBmD,GAAW5B,MAA4C,SAApB4B,GAAW5B,MAC9C4B,EAAUlC,KAAO,KAAOK,EAAML,IAC9BkC,EAAU7G,MAAQ,KAAOgF,EAAMhF,KAC/B+F,KAAK+E,YAAYpH,IAAI,GAAGuC,IAAMY,EAAU7G,MAGxCkF,EAAOxS,KAAKsS,GAEhB,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUgF,OAAOmH,GAAM,CACpCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUkF,QAAQiH,GAAM,CACrCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUiF,GAAGkH,GAAM,CAChCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAU8F,WAAWqG,GAAM,CACxCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUyF,KAAK0G,GAAM,CAClCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAU4F,KAAKuG,GAAM,CAClCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUwF,IAAI2G,GAAM,CACjCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9B,MAAM2S,EAAY3B,EAAOxB,IAAI,GACL,cAApBmD,GAAW5B,MAA4C,SAApB4B,GAAW5B,MAC9C4B,EAAUlC,KAAO,KAAOK,EAAML,IAC9BkC,EAAU7G,MAAQ,KAAOgF,EAAML,IAC/BoB,KAAK+E,YAAYpH,IAAI,GAAGuC,IAAMY,EAAU7G,MAElC+F,KAAKb,OAAOuE,MAAMzE,EAAM7D,OAC9B4E,KAAKb,OAAOuE,MAAMzE,EAAM7D,KAAO,CAC3BuB,KAAMsC,EAAMtC,KACZxM,MAAO8O,EAAM9O,QAGrB,QAChB,CAEY,GAAI8O,EAAQe,KAAKjM,UAAUiG,MAAMkG,GAAM,CACnCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUoF,SAAS+G,GAAM,CACtCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAGY,IAAIsG,EAASrF,EACb,GAAIF,KAAKF,QAAQrM,YAAY+R,WAAY,CACrC,IAAIC,EAAaC,IACjB,MAAMC,EAAUzF,EAAI7B,MAAM,GAC1B,IAAIuH,EACJ5F,KAAKF,QAAQrM,WAAW+R,WAAWK,SAASC,IACxCF,EAAYE,EAAcT,KAAK,CAAExG,MAAOmB,MAAQ2F,GACvB,kBAAdC,GAA0BA,GAAa,IAC9CH,EAAajN,KAAK1H,IAAI2U,EAAYG,GAC1D,IAEoBH,EAAaC,KAAYD,GAAc,IACvCF,EAASrF,EAAIgB,UAAU,EAAGuE,EAAa,GAE3D,CACY,GAAIzF,KAAKjB,MAAM6B,MAAQ3B,EAAQe,KAAKjM,UAAU6F,UAAU2L,IAAxD,CACI,MAAMzE,EAAY3B,EAAOxB,IAAI,GACzBwH,GAA4C,cAApBrE,GAAW5B,MACnC4B,EAAUlC,KAAO,KAAOK,EAAML,IAC9BkC,EAAU7G,MAAQ,KAAOgF,EAAMhF,KAC/B+F,KAAK+E,YAAYnH,MACjBoC,KAAK+E,YAAYpH,IAAI,GAAGuC,IAAMY,EAAU7G,MAGxCkF,EAAOxS,KAAKsS,GAEhBkG,EAAuBI,EAAOpX,SAAW+R,EAAI/R,OAC7C+R,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,OAE9C,MAEY,GAAI8Q,EAAQe,KAAKjM,UAAUkG,KAAKiG,GAAhC,CACIA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9B,MAAM2S,EAAY3B,EAAOxB,IAAI,GACL,SAApBmD,GAAW5B,MACX4B,EAAUlC,KAAO,KAAOK,EAAML,IAC9BkC,EAAU7G,MAAQ,KAAOgF,EAAMhF,KAC/B+F,KAAK+E,YAAYnH,MACjBoC,KAAK+E,YAAYpH,IAAI,GAAGuC,IAAMY,EAAU7G,MAGxCkF,EAAOxS,KAAKsS,EAGhC,MACY,GAAIiB,EAAK,CACL,MAAM6F,EAAS,0BAA4B7F,EAAI8F,WAAW,GAC1D,GAAIhG,KAAKF,QAAQhM,OAAQ,CACrBjG,QAAQF,MAAMoY,GACd,KACpB,CAEoB,MAAM,IAAIE,MAAMF,EAEpC,CACA,CAEQ,OADA/F,KAAKjB,MAAM6B,KAAM,EACVzB,CACf,CACI/C,MAAAA,CAAO8D,EAAKf,EAAS,IAEjB,OADAa,KAAK+E,YAAYpY,KAAK,CAAEuT,MAAKf,WACtBA,CACf,CAIIC,YAAAA,CAAac,EAAKf,EAAS,IAEvB,IAAI0E,EAAY3D,EACZjD,EAAQ,KAEZ,GAAI+C,KAAKb,OAAOuE,MAAO,CACnB,MAAMA,EAAQmB,OAAOqB,KAAKlG,KAAKb,OAAOuE,OACtC,GAAIA,EAAMvV,OAAS,EACf,MAA8E,OAAtE8O,EAAQ+C,KAAKjM,UAAU+K,MAAM1C,OAAOX,cAAcpH,KAAKwP,IACvDH,EAAMyC,SAASlJ,EAAM,GAAGoB,MAAMpB,EAAM,GAAGmJ,YAAY,KAAO,GAAI,MAC9DvC,EAAYA,EAAUxF,MAAM,EAAGpB,EAAMlK,OAC/B,IAAM,IAAI+O,OAAO7E,EAAM,GAAG9O,OAAS,GAAK,IACxC0V,EAAUxF,MAAM2B,KAAKjM,UAAU+K,MAAM1C,OAAOX,cAAc6I,WAIxF,CAEQ,MAA0E,OAAlErH,EAAQ+C,KAAKjM,UAAU+K,MAAM1C,OAAOvB,UAAUxG,KAAKwP,IACvDA,EAAYA,EAAUxF,MAAM,EAAGpB,EAAMlK,OAAS,IAAM,IAAI+O,OAAO7E,EAAM,GAAG9O,OAAS,GAAK,IAAM0V,EAAUxF,MAAM2B,KAAKjM,UAAU+K,MAAM1C,OAAOvB,UAAUyJ,WAGtJ,MAA+E,OAAvErH,EAAQ+C,KAAKjM,UAAU+K,MAAM1C,OAAOnB,eAAe5G,KAAKwP,IAC5DA,EAAYA,EAAUxF,MAAM,EAAGpB,EAAMlK,OAAS,KAAO8Q,EAAUxF,MAAM2B,KAAKjM,UAAU+K,MAAM1C,OAAOnB,eAAeqJ,WAEpH,IAAI+B,GAAe,EACfvC,EAAW,GACf,MAAO5D,EAAK,CAKR,IAAIjB,EAEJ,GANKoH,IACDvC,EAAW,IAEfuC,GAAe,EAGXrG,KAAKF,QAAQrM,YAAY2I,QAAQyG,MAAMuC,MACnCnG,EAAQmG,EAAaC,KAAK,CAAExG,MAAOmB,MAAQE,EAAKf,MAChDe,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,IACL,KAIX,SAGJ,GAAIA,EAAQe,KAAKjM,UAAU8H,OAAOqE,GAAM,CACpCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUqH,IAAI8E,GAAM,CACjCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUuH,KAAK4E,GAAM,CAClCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUwH,QAAQ2E,EAAKF,KAAKb,OAAOuE,OAAQ,CACxDxD,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9B,MAAM2S,EAAY3B,EAAOxB,IAAI,GACV,SAAfsB,EAAMC,MAAuC,SAApB4B,GAAW5B,MACpC4B,EAAUlC,KAAOK,EAAML,IACvBkC,EAAU7G,MAAQgF,EAAMhF,MAGxBkF,EAAOxS,KAAKsS,GAEhB,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAU6P,SAAS1D,EAAK2D,EAAWC,GAAW,CAC3D5D,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUyQ,SAAStE,GAAM,CACtCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUwG,GAAG2F,GAAM,CAChCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAU6H,IAAIsE,GAAM,CACjCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,GAAIA,EAAQe,KAAKjM,UAAUmH,SAASgF,GAAM,CACtCA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAEY,IAAKe,KAAKjB,MAAMC,SAAWC,EAAQe,KAAKjM,UAAU+H,IAAIoE,IAAO,CACzDA,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QAC9BgR,EAAOxS,KAAKsS,GACZ,QAChB,CAGY,IAAIsG,EAASrF,EACb,GAAIF,KAAKF,QAAQrM,YAAY6S,YAAa,CACtC,IAAIb,EAAaC,IACjB,MAAMC,EAAUzF,EAAI7B,MAAM,GAC1B,IAAIuH,EACJ5F,KAAKF,QAAQrM,WAAW6S,YAAYT,SAASC,IACzCF,EAAYE,EAAcT,KAAK,CAAExG,MAAOmB,MAAQ2F,GACvB,kBAAdC,GAA0BA,GAAa,IAC9CH,EAAajN,KAAK1H,IAAI2U,EAAYG,GAC1D,IAEoBH,EAAaC,KAAYD,GAAc,IACvCF,EAASrF,EAAIgB,UAAU,EAAGuE,EAAa,GAE3D,CACY,GAAIxG,EAAQe,KAAKjM,UAAUyG,WAAW+K,GAAtC,CACIrF,EAAMA,EAAIgB,UAAUjC,EAAML,IAAIzQ,QACF,MAAxB8Q,EAAML,IAAIP,OAAO,KACjByF,EAAW7E,EAAML,IAAIP,OAAO,IAEhCgI,GAAe,EACf,MAAMvF,EAAY3B,EAAOxB,IAAI,GACL,SAApBmD,GAAW5B,MACX4B,EAAUlC,KAAOK,EAAML,IACvBkC,EAAU7G,MAAQgF,EAAMhF,MAGxBkF,EAAOxS,KAAKsS,EAGhC,MACY,GAAIiB,EAAK,CACL,MAAM6F,EAAS,0BAA4B7F,EAAI8F,WAAW,GAC1D,GAAIhG,KAAKF,QAAQhM,OAAQ,CACrBjG,QAAQF,MAAMoY,GACd,KACpB,CAEoB,MAAM,IAAIE,MAAMF,EAEpC,CACA,CACQ,OAAO5G,CACf,EC3ZO,MAAMoH,GAGT1G,WAAAA,CAAYC,IAASC,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,sBACjBC,KAAKF,QAAUA,GAAW7L,CAClC,CACIgM,KAAAA,CAAMhB,GACF,MAAO,EACf,CACIlF,IAAAA,EAAK,KAAEE,EAAI,KAAEmG,EAAI,QAAEhD,IACf,MAAMoJ,GAAcpG,GAAQ,IAAInD,MAAMlI,EAAMmD,iBAAiB,GACvD6B,EAAOE,EAAKtF,QAAQI,EAAMoD,cAAe,IAAM,KACrD,OAAKqO,EAKE,8BACD3K,GAAO2K,GACP,MACCpJ,EAAUrD,EAAO8B,GAAO9B,GAAM,IAC/B,kBARK,eACAqD,EAAUrD,EAAO8B,GAAO9B,GAAM,IAC/B,iBAOlB,CACIF,UAAAA,EAAW,OAAEsF,IACT,MAAMsH,EAAOzG,KAAK0G,OAAOC,MAAMxH,GAC/B,MAAO,iBAAiBsH,kBAChC,CACI9M,IAAAA,EAAK,KAAEM,IACH,OAAOA,CACf,CACIhB,OAAAA,EAAQ,OAAEkG,EAAM,MAAEmB,IACd,MAAO,KAAKA,KAASN,KAAK0G,OAAOE,YAAYzH,QAAamB,MAClE,CACItH,EAAAA,CAAGiG,GACC,MAAO,QACf,CACIzF,IAAAA,CAAKyF,GACD,MAAMmC,EAAUnC,EAAMmC,QAChBC,EAAQpC,EAAMoC,MACpB,IAAIoF,EAAO,GACX,IAAK,IAAII,EAAI,EAAGA,EAAI5H,EAAMsC,MAAMpT,OAAQ0Y,IAAK,CACzC,MAAMlW,EAAOsO,EAAMsC,MAAMsF,GACzBJ,GAAQzG,KAAK8G,SAASnW,EAClC,CACQ,MAAMuO,EAAOkC,EAAU,KAAO,KACxB2F,EAAa3F,GAAqB,IAAVC,EAAgB,WAAaA,EAAQ,IAAO,GAC1E,MAAO,IAAMnC,EAAO6H,EAAY,MAAQN,EAAO,KAAOvH,EAAO,KACrE,CACI4H,QAAAA,CAASnW,GACL,IAAIqW,EAAW,GACf,GAAIrW,EAAK2R,KAAM,CACX,MAAM2E,EAAWjH,KAAKiH,SAAS,CAAE1E,UAAW5R,EAAK4R,UAC7C5R,EAAK2Q,MACwB,cAAzB3Q,EAAKwO,OAAO,IAAID,MAChBvO,EAAKwO,OAAO,GAAGlF,KAAOgN,EAAW,IAAMtW,EAAKwO,OAAO,GAAGlF,KAClDtJ,EAAKwO,OAAO,GAAGA,QAAUxO,EAAKwO,OAAO,GAAGA,OAAOhR,OAAS,GAAuC,SAAlCwC,EAAKwO,OAAO,GAAGA,OAAO,GAAGD,OACtFvO,EAAKwO,OAAO,GAAGA,OAAO,GAAGlF,KAAOgN,EAAW,IAAMpL,GAAOlL,EAAKwO,OAAO,GAAGA,OAAO,GAAGlF,MACjFtJ,EAAKwO,OAAO,GAAGA,OAAO,GAAG/B,SAAU,IAIvCzM,EAAKwO,OAAO+H,QAAQ,CAChBhI,KAAM,OACNN,IAAKqI,EAAW,IAChBhN,KAAMgN,EAAW,IACjB7J,SAAS,IAKjB4J,GAAYC,EAAW,GAEvC,CAEQ,OADAD,GAAYhH,KAAK0G,OAAOC,MAAMhW,EAAKwO,SAAUxO,EAAK2Q,OAC3C,OAAO0F,UACtB,CACIC,QAAAA,EAAS,QAAE1E,IACP,MAAO,WACAA,EAAU,cAAgB,IAC3B,8BACd,CACI3I,SAAAA,EAAU,OAAEuF,IACR,MAAO,MAAMa,KAAK0G,OAAOE,YAAYzH,UAC7C,CACInF,KAAAA,CAAMiF,GACF,IAAIiE,EAAS,GAETE,EAAO,GACX,IAAK,IAAIyD,EAAI,EAAGA,EAAI5H,EAAMiE,OAAO/U,OAAQ0Y,IACrCzD,GAAQpD,KAAKmH,UAAUlI,EAAMiE,OAAO2D,IAExC3D,GAAUlD,KAAKoH,SAAS,CAAEnN,KAAMmJ,IAChC,IAAIqD,EAAO,GACX,IAAK,IAAII,EAAI,EAAGA,EAAI5H,EAAMpM,KAAK1E,OAAQ0Y,IAAK,CACxC,MAAM7J,EAAMiC,EAAMpM,KAAKgU,GACvBzD,EAAO,GACP,IAAK,IAAIiE,EAAI,EAAGA,EAAIrK,EAAI7O,OAAQkZ,IAC5BjE,GAAQpD,KAAKmH,UAAUnK,EAAIqK,IAE/BZ,GAAQzG,KAAKoH,SAAS,CAAEnN,KAAMmJ,GAC1C,CAGQ,OAFIqD,IACAA,EAAO,UAAUA,aACd,qBAEDvD,EACA,aACAuD,EACA,YACd,CACIW,QAAAA,EAAS,KAAEnN,IACP,MAAO,SAASA,UACxB,CACIkN,SAAAA,CAAUlI,GACN,MAAM/L,EAAU8M,KAAK0G,OAAOE,YAAY3H,EAAME,QACxCD,EAAOD,EAAMiE,OAAS,KAAO,KAC7B9H,EAAM6D,EAAMkE,MACZ,IAAIjE,YAAeD,EAAMkE,UACzB,IAAIjE,KACV,OAAO9D,EAAMlI,EAAU,KAAKgM,MACpC,CAIIoI,MAAAA,EAAO,OAAEnI,IACL,MAAO,WAAWa,KAAK0G,OAAOE,YAAYzH,aAClD,CACIoI,EAAAA,EAAG,OAAEpI,IACD,MAAO,OAAOa,KAAK0G,OAAOE,YAAYzH,SAC9C,CACIqF,QAAAA,EAAS,KAAEvK,IACP,MAAO,SAAS4B,GAAO5B,GAAM,WACrC,CACIM,EAAAA,CAAG0E,GACC,MAAO,MACf,CACIrD,GAAAA,EAAI,OAAEuD,IACF,MAAO,QAAQa,KAAK0G,OAAOE,YAAYzH,UAC/C,CACI7D,IAAAA,EAAK,KAAEqB,EAAI,MAAExM,EAAK,OAAEgP,IAChB,MAAMlF,EAAO+F,KAAK0G,OAAOE,YAAYzH,GAC/BqI,EAAY9K,GAASC,GAC3B,GAAkB,OAAd6K,EACA,OAAOvN,EAEX0C,EAAO6K,EACP,IAAIC,EAAM,YAAc9K,EAAO,IAK/B,OAJIxM,IACAsX,GAAO,WAAc5L,GAAO1L,GAAU,KAE1CsX,GAAO,IAAMxN,EAAO,OACbwN,CACf,CACIC,KAAAA,EAAM,KAAE/K,EAAI,MAAExM,EAAK,KAAE8J,IACjB,MAAMuN,EAAY9K,GAASC,GAC3B,GAAkB,OAAd6K,EACA,OAAO3L,GAAO5B,GAElB0C,EAAO6K,EACP,IAAIC,EAAM,aAAa9K,WAAc1C,KAKrC,OAJI9J,IACAsX,GAAO,WAAW5L,GAAO1L,OAE7BsX,GAAO,IACAA,CACf,CACIxN,IAAAA,CAAKgF,GACD,MAAO,WAAYA,GAASA,EAAME,OAC5Ba,KAAK0G,OAAOE,YAAY3H,EAAME,QAC7B,YAAaF,GAASA,EAAM7B,QAAU6B,EAAMhF,KAAO4B,GAAOoD,EAAMhF,KAC/E,EC5KO,MAAM0N,GAETL,MAAAA,EAAO,KAAErN,IACL,OAAOA,CACf,CACIsN,EAAAA,EAAG,KAAEtN,IACD,OAAOA,CACf,CACIuK,QAAAA,EAAS,KAAEvK,IACP,OAAOA,CACf,CACI2B,GAAAA,EAAI,KAAE3B,IACF,OAAOA,CACf,CACIN,IAAAA,EAAK,KAAEM,IACH,OAAOA,CACf,CACIA,IAAAA,EAAK,KAAEA,IACH,OAAOA,CACf,CACIqB,IAAAA,EAAK,KAAErB,IACH,MAAO,GAAKA,CACpB,CACIyN,KAAAA,EAAM,KAAEzN,IACJ,MAAO,GAAKA,CACpB,CACIM,EAAAA,GACI,MAAO,EACf,EC1BO,MAAMqN,GAIT/H,WAAAA,CAAYC,IAASC,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,yBAAAA,EAAAA,EAAAA,GAAA,4BACjBC,KAAKF,QAAUA,GAAW7L,EAC1B+L,KAAKF,QAAQjM,SAAWmM,KAAKF,QAAQjM,UAAY,IAAI0S,GACrDvG,KAAKnM,SAAWmM,KAAKF,QAAQjM,SAC7BmM,KAAKnM,SAASiM,QAAUE,KAAKF,QAC7BE,KAAKnM,SAAS6S,OAAS1G,KACvBA,KAAK6H,aAAe,IAAIF,EAChC,CAII,YAAOhB,CAAMxH,EAAQW,GACjB,MAAM4G,EAAS,IAAIkB,GAAQ9H,GAC3B,OAAO4G,EAAOC,MAAMxH,EAC5B,CAII,kBAAOyH,CAAYzH,EAAQW,GACvB,MAAM4G,EAAS,IAAIkB,GAAQ9H,GAC3B,OAAO4G,EAAOE,YAAYzH,EAClC,CAIIwH,KAAAA,CAAMxH,EAAQyB,GAAM,GAChB,IAAI6G,EAAM,GACV,IAAK,IAAIjK,EAAI,EAAGA,EAAI2B,EAAOhR,OAAQqP,IAAK,CACpC,MAAMsK,EAAW3I,EAAO3B,GAExB,GAAIwC,KAAKF,QAAQrM,YAAYsU,YAAYD,EAAS5I,MAAO,CACrD,MAAM8I,EAAeF,EACfG,EAAMjI,KAAKF,QAAQrM,WAAWsU,UAAUC,EAAa9I,MAAMmG,KAAK,CAAEqB,OAAQ1G,MAAQgI,GACxF,IAAY,IAARC,IAAkB,CAAC,QAAS,KAAM,UAAW,OAAQ,QAAS,aAAc,OAAQ,OAAQ,YAAa,QAAQ9B,SAAS6B,EAAa9I,MAAO,CAC9IuI,GAAOQ,GAAO,GACd,QACpB,CACA,CACY,MAAMhJ,EAAQ6I,EACd,OAAQ7I,EAAMC,MACV,IAAK,QACDuI,GAAOzH,KAAKnM,SAASoM,MAAMhB,GAC3B,SAEJ,IAAK,KACDwI,GAAOzH,KAAKnM,SAASmF,GAAGiG,GACxB,SAEJ,IAAK,UACDwI,GAAOzH,KAAKnM,SAASoF,QAAQgG,GAC7B,SAEJ,IAAK,OACDwI,GAAOzH,KAAKnM,SAASkG,KAAKkF,GAC1B,SAEJ,IAAK,QACDwI,GAAOzH,KAAKnM,SAASmG,MAAMiF,GAC3B,SAEJ,IAAK,aACDwI,GAAOzH,KAAKnM,SAASgG,WAAWoF,GAChC,SAEJ,IAAK,OACDwI,GAAOzH,KAAKnM,SAAS2F,KAAKyF,GAC1B,SAEJ,IAAK,OACDwI,GAAOzH,KAAKnM,SAAS8F,KAAKsF,GAC1B,SAEJ,IAAK,YACDwI,GAAOzH,KAAKnM,SAAS+F,UAAUqF,GAC/B,SAEJ,IAAK,OAAQ,CACT,IAAIiJ,EAAYjJ,EACZwH,EAAOzG,KAAKnM,SAASoG,KAAKiO,GAC9B,MAAO1K,EAAI,EAAI2B,EAAOhR,QAAiC,SAAvBgR,EAAO3B,EAAI,GAAG0B,KAC1CgJ,EAAY/I,IAAS3B,GACrBiJ,GAAQ,KAAOzG,KAAKnM,SAASoG,KAAKiO,GAGlCT,GADA7G,EACOZ,KAAKnM,SAAS+F,UAAU,CAC3BsF,KAAM,YACNN,IAAK6H,EACLxM,KAAMwM,EACNtH,OAAQ,CAAC,CAAED,KAAM,OAAQN,IAAK6H,EAAMxM,KAAMwM,EAAMrJ,SAAS,MAItDqJ,EAEX,QACpB,CACgB,QAAS,CACL,MAAMV,EAAS,eAAiB9G,EAAMC,KAAO,wBAC7C,GAAIc,KAAKF,QAAQhM,OAEb,OADAjG,QAAQF,MAAMoY,GACP,GAGP,MAAM,IAAIE,MAAMF,EAExC,EAEA,CACQ,OAAO0B,CACf,CAIIb,WAAAA,CAAYzH,EAAQtL,EAAWmM,KAAKnM,UAChC,IAAI4T,EAAM,GACV,IAAK,IAAIjK,EAAI,EAAGA,EAAI2B,EAAOhR,OAAQqP,IAAK,CACpC,MAAMsK,EAAW3I,EAAO3B,GAExB,GAAIwC,KAAKF,QAAQrM,YAAYsU,YAAYD,EAAS5I,MAAO,CACrD,MAAM+I,EAAMjI,KAAKF,QAAQrM,WAAWsU,UAAUD,EAAS5I,MAAMmG,KAAK,CAAEqB,OAAQ1G,MAAQ8H,GACpF,IAAY,IAARG,IAAkB,CAAC,SAAU,OAAQ,OAAQ,QAAS,SAAU,KAAM,WAAY,KAAM,MAAO,QAAQ9B,SAAS2B,EAAS5I,MAAO,CAChIuI,GAAOQ,GAAO,GACd,QACpB,CACA,CACY,MAAMhJ,EAAQ6I,EACd,OAAQ7I,EAAMC,MACV,IAAK,SACDuI,GAAO5T,EAASoG,KAAKgF,GACrB,MAEJ,IAAK,OACDwI,GAAO5T,EAAS8F,KAAKsF,GACrB,MAEJ,IAAK,OACDwI,GAAO5T,EAASyH,KAAK2D,GACrB,MAEJ,IAAK,QACDwI,GAAO5T,EAAS6T,MAAMzI,GACtB,MAEJ,IAAK,SACDwI,GAAO5T,EAASyT,OAAOrI,GACvB,MAEJ,IAAK,KACDwI,GAAO5T,EAAS0T,GAAGtI,GACnB,MAEJ,IAAK,WACDwI,GAAO5T,EAAS2Q,SAASvF,GACzB,MAEJ,IAAK,KACDwI,GAAO5T,EAAS0G,GAAG0E,GACnB,MAEJ,IAAK,MACDwI,GAAO5T,EAAS+H,IAAIqD,GACpB,MAEJ,IAAK,OACDwI,GAAO5T,EAASoG,KAAKgF,GACrB,MAEJ,QAAS,CACL,MAAM8G,EAAS,eAAiB9G,EAAMC,KAAO,wBAC7C,GAAIc,KAAKF,QAAQhM,OAEb,OADAjG,QAAQF,MAAMoY,GACP,GAGP,MAAM,IAAIE,MAAMF,EAExC,EAEA,CACQ,OAAO0B,CACf,EC3LO,MAAMU,GAGTtI,WAAAA,CAAYC,IAASC,EAAAA,EAAAA,GAAA,wBAAAA,EAAAA,EAAAA,GAAA,qBACjBC,KAAKF,QAAUA,GAAW7L,CAClC,CASImU,UAAAA,CAAWC,GACP,OAAOA,CACf,CAIIC,WAAAA,CAAY3O,GACR,OAAOA,CACf,CAII4O,gBAAAA,CAAiBpJ,GACb,OAAOA,CACf,CAIIqJ,YAAAA,GACI,OAAOxI,KAAK9D,MAAQ0I,GAAOI,IAAMJ,GAAOK,SAChD,CAIIwD,aAAAA,GACI,OAAOzI,KAAK9D,MAAQ0L,GAAQjB,MAAQiB,GAAQhB,WACpD,GACA7G,EAAAA,EAAAA,GAzCaoI,GAAM,mBAMW,IAAIO,IAAI,CAC9B,aACA,cACA,sBCJD,MAAMC,GAWT9I,WAAAA,IAAe+I,IAAM7I,EAAAA,EAAAA,GAAA,gBAVVxM,MAAcwM,EAAAA,EAAAA,GAAA,eACfC,KAAK6I,aAAU9I,EAAAA,EAAAA,GAAA,aACjBC,KAAK8I,eAAc,KAAK/I,EAAAA,EAAAA,GAAA,mBAClBC,KAAK8I,eAAc,KAAM/I,EAAAA,EAAAA,GAAA,cAC9B6H,KAAO7H,EAAAA,EAAAA,GAAA,gBACLwG,KAASxG,EAAAA,EAAAA,GAAA,oBACL4H,KAAa5H,EAAAA,EAAAA,GAAA,aACpB6E,KAAM7E,EAAAA,EAAAA,GAAA,iBACFH,KAAUG,EAAAA,EAAAA,GAAA,aACdoI,IAEJnI,KAAK+I,OAAOH,EACpB,CAII5U,UAAAA,CAAWmL,EAAQ6J,GACf,IAAIC,EAAS,GACb,IAAK,MAAMhK,KAASE,EAEhB,OADA8J,EAASA,EAAOC,OAAOF,EAAS3D,KAAKrF,KAAMf,IACnCA,EAAMC,MACV,IAAK,QAAS,CACV,MAAMiK,EAAalK,EACnB,IAAK,MAAMmE,KAAQ+F,EAAWjG,OAC1B+F,EAASA,EAAOC,OAAOlJ,KAAKhM,WAAWoP,EAAKjE,OAAQ6J,IAExD,IAAK,MAAMhM,KAAOmM,EAAWtW,KACzB,IAAK,MAAMuQ,KAAQpG,EACfiM,EAASA,EAAOC,OAAOlJ,KAAKhM,WAAWoP,EAAKjE,OAAQ6J,IAG5D,KACpB,CACgB,IAAK,OAAQ,CACT,MAAMI,EAAYnK,EAClBgK,EAASA,EAAOC,OAAOlJ,KAAKhM,WAAWoV,EAAU7H,MAAOyH,IACxD,KACpB,CACgB,QAAS,CACL,MAAMhB,EAAe/I,EACjBe,KAAKqJ,SAAS5V,YAAY6V,cAActB,EAAa9I,MACrDc,KAAKqJ,SAAS5V,WAAW6V,YAAYtB,EAAa9I,MAAM2G,SAASyD,IAC7D,MAAMnK,EAAS6I,EAAasB,GAAaC,KAAK7D,KAC9CuD,EAASA,EAAOC,OAAOlJ,KAAKhM,WAAWmL,EAAQ6J,GAAU,IAGxDhB,EAAa7I,SAClB8J,EAASA,EAAOC,OAAOlJ,KAAKhM,WAAWgU,EAAa7I,OAAQ6J,IAEpF,EAGQ,OAAOC,CACf,CACIF,GAAAA,IAAOH,GACH,MAAMnV,EAAauM,KAAKqJ,SAAS5V,YAAc,CAAEsU,UAAW,CAAC,EAAGuB,YAAa,CAAC,GAwK9E,OAvKAV,EAAK/C,SAAS2D,IAEV,MAAMC,EAAO,IAAKD,GA8DlB,GA5DAC,EAAKxc,MAAQ+S,KAAKqJ,SAASpc,OAASwc,EAAKxc,QAAS,EAE9Cuc,EAAK/V,aACL+V,EAAK/V,WAAWoS,SAAS6D,IACrB,IAAKA,EAAI9U,KACL,MAAM,IAAIqR,MAAM,2BAEpB,GAAI,aAAcyD,EAAK,CACnB,MAAMC,EAAelW,EAAWsU,UAAU2B,EAAI9U,MAG1CnB,EAAWsU,UAAU2B,EAAI9U,MAFzB+U,EAEiC,YAAaf,GAC1C,IAAIX,EAAMyB,EAAI7V,SAAS+V,MAAM5J,KAAM4I,GAInC,OAHY,IAARX,IACAA,EAAM0B,EAAaC,MAAM5J,KAAM4I,IAE5BX,CACvC,EAG6DyB,EAAI7V,QAEjE,CACoB,GAAI,cAAe6V,EAAK,CACpB,IAAKA,EAAIjL,OAAwB,UAAdiL,EAAIjL,OAAmC,WAAdiL,EAAIjL,MAC5C,MAAM,IAAIwH,MAAM,+CAEpB,MAAM4D,EAAWpW,EAAWiW,EAAIjL,OAC5BoL,EACAA,EAAS3C,QAAQwC,EAAI3V,WAGrBN,EAAWiW,EAAIjL,OAAS,CAACiL,EAAI3V,WAE7B2V,EAAIrI,QACc,UAAdqI,EAAIjL,MACAhL,EAAW+R,WACX/R,EAAW+R,WAAW7Y,KAAK+c,EAAIrI,OAG/B5N,EAAW+R,WAAa,CAACkE,EAAIrI,OAGd,WAAdqI,EAAIjL,QACLhL,EAAW6S,YACX7S,EAAW6S,YAAY3Z,KAAK+c,EAAIrI,OAGhC5N,EAAW6S,YAAc,CAACoD,EAAIrI,QAIlE,CACwB,gBAAiBqI,GAAOA,EAAIJ,cAC5B7V,EAAW6V,YAAYI,EAAI9U,MAAQ8U,EAAIJ,YAC/D,IAEgBG,EAAKhW,WAAaA,GAGlB+V,EAAK3V,SAAU,CACf,MAAMA,EAAWmM,KAAKqJ,SAASxV,UAAY,IAAI0S,GAAUvG,KAAKqJ,UAC9D,IAAK,MAAMS,KAAQN,EAAK3V,SAAU,CAC9B,KAAMiW,KAAQjW,GACV,MAAM,IAAIoS,MAAM,aAAa6D,qBAEjC,GAAI,CAAC,UAAW,UAAU3D,SAAS2D,GAE/B,SAEJ,MAAMC,EAAeD,EACfE,EAAeR,EAAK3V,SAASkW,GAC7BJ,EAAe9V,EAASkW,GAE9BlW,EAASkW,GAAgB,IAAInB,KACzB,IAAIX,EAAM+B,EAAaJ,MAAM/V,EAAU+U,GAIvC,OAHY,IAARX,IACAA,EAAM0B,EAAaC,MAAM/V,EAAU+U,IAEhCX,GAAO,EAAE,CAExC,CACgBwB,EAAK5V,SAAWA,CAChC,CACY,GAAI2V,EAAKzV,UAAW,CAChB,MAAMA,EAAYiM,KAAKqJ,SAAStV,WAAa,IAAI6L,GAAWI,KAAKqJ,UACjE,IAAK,MAAMS,KAAQN,EAAKzV,UAAW,CAC/B,KAAM+V,KAAQ/V,GACV,MAAM,IAAIkS,MAAM,cAAc6D,qBAElC,GAAI,CAAC,UAAW,QAAS,SAAS3D,SAAS2D,GAEvC,SAEJ,MAAMG,EAAgBH,EAChBI,EAAgBV,EAAKzV,UAAUkW,GAC/BE,EAAgBpW,EAAUkW,GAGhClW,EAAUkW,GAAiB,IAAIrB,KAC3B,IAAIX,EAAMiC,EAAcN,MAAM7V,EAAW6U,GAIzC,OAHY,IAARX,IACAA,EAAMkC,EAAcP,MAAM7V,EAAW6U,IAElCX,CAAG,CAElC,CACgBwB,EAAK1V,UAAYA,CACjC,CAEY,GAAIyV,EAAK7V,MAAO,CACZ,MAAMA,EAAQqM,KAAKqJ,SAAS1V,OAAS,IAAIwU,GACzC,IAAK,MAAM2B,KAAQN,EAAK7V,MAAO,CAC3B,KAAMmW,KAAQnW,GACV,MAAM,IAAIsS,MAAM,SAAS6D,qBAE7B,GAAI,CAAC,UAAW,SAAS3D,SAAS2D,GAE9B,SAEJ,MAAMM,EAAYN,EACZO,EAAYb,EAAK7V,MAAMyW,GACvBE,EAAW3W,EAAMyW,GACnBjC,GAAOoC,iBAAiBC,IAAIV,GAE5BnW,EAAMyW,GAAcK,IAChB,GAAIzK,KAAKqJ,SAASpc,MACd,OAAOyd,QAAQC,QAAQN,EAAUhF,KAAK1R,EAAO8W,IAAMG,MAAK3C,GAC7CqC,EAASjF,KAAK1R,EAAOsU,KAGpC,MAAMA,EAAMoC,EAAUhF,KAAK1R,EAAO8W,GAClC,OAAOH,EAASjF,KAAK1R,EAAOsU,EAAI,EAKpCtU,EAAMyW,GAAa,IAAIxB,KACnB,IAAIX,EAAMoC,EAAUT,MAAMjW,EAAOiV,GAIjC,OAHY,IAARX,IACAA,EAAMqC,EAASV,MAAMjW,EAAOiV,IAEzBX,CAAG,CAGtC,CACgBwB,EAAK9V,MAAQA,CAC7B,CAEY,GAAI6V,EAAKxV,WAAY,CACjB,MAAMA,EAAagM,KAAKqJ,SAASrV,WAC3B6W,EAAiBrB,EAAKxV,WAC5ByV,EAAKzV,WAAa,SAAUiL,GACxB,IAAIgK,EAAS,GAKb,OAJAA,EAAOtc,KAAKke,EAAexF,KAAKrF,KAAMf,IAClCjL,IACAiV,EAASA,EAAOC,OAAOlV,EAAWqR,KAAKrF,KAAMf,KAE1CgK,CAC3B,CACA,CACYjJ,KAAKqJ,SAAW,IAAKrJ,KAAKqJ,YAAaI,EAAM,IAE1CzJ,IACf,CACI6I,UAAAA,CAAWrU,GAEP,OADAwL,KAAKqJ,SAAW,IAAKrJ,KAAKqJ,YAAa7U,GAChCwL,IACf,CACInB,KAAAA,CAAMqB,EAAKJ,GACP,OAAO8E,GAAOI,IAAI9E,EAAKJ,GAAWE,KAAKqJ,SAC/C,CACI3C,MAAAA,CAAOvH,EAAQW,GACX,OAAO8H,GAAQjB,MAAMxH,EAAQW,GAAWE,KAAKqJ,SACrD,CACIP,aAAAA,CAAcgC,GAEV,MAAMnE,EAAQA,CAACzG,EAAKJ,KAChB,MAAMiL,EAAU,IAAKjL,GACftL,EAAM,IAAKwL,KAAKqJ,YAAa0B,GAC7BC,EAAahL,KAAKiL,UAAUzW,EAAIV,SAAUU,EAAIvH,OAEpD,IAA4B,IAAxB+S,KAAKqJ,SAASpc,QAAoC,IAAlB8d,EAAQ9d,MACxC,OAAO+d,EAAW,IAAI/E,MAAM,uIAGhC,GAAmB,qBAAR/F,GAA+B,OAARA,EAC9B,OAAO8K,EAAW,IAAI/E,MAAM,mDAEhC,GAAmB,kBAAR/F,EACP,OAAO8K,EAAW,IAAI/E,MAAM,wCACtBpB,OAAOqG,UAAUC,SAAS9F,KAAKnF,GAAO,sBAE5C1L,EAAIb,QACJa,EAAIb,MAAMmM,QAAUtL,EACpBA,EAAIb,MAAMuI,MAAQ4O,GAEtB,MAAMjM,EAAQrK,EAAIb,MAAQa,EAAIb,MAAM6U,eAAkBsC,EAAYlG,GAAOI,IAAMJ,GAAOK,UAChFyB,EAASlS,EAAIb,MAAQa,EAAIb,MAAM8U,gBAAmBqC,EAAYlD,GAAQjB,MAAQiB,GAAQhB,YAC5F,GAAIpS,EAAIvH,MACJ,OAAOyd,QAAQC,QAAQnW,EAAIb,MAAQa,EAAIb,MAAMyU,WAAWlI,GAAOA,GAC1D0K,MAAK1K,GAAOrB,EAAMqB,EAAK1L,KACvBoW,MAAKzL,GAAU3K,EAAIb,MAAQa,EAAIb,MAAM4U,iBAAiBpJ,GAAUA,IAChEyL,MAAKzL,GAAU3K,EAAIR,WAAa0W,QAAQU,IAAIpL,KAAKhM,WAAWmL,EAAQ3K,EAAIR,aAAa4W,MAAK,IAAMzL,IAAUA,IAC1GyL,MAAKzL,GAAUuH,EAAOvH,EAAQ3K,KAC9BoW,MAAKjR,GAAQnF,EAAIb,MAAQa,EAAIb,MAAM2U,YAAY3O,GAAQA,IACvD0R,MAAML,GAEf,IACQxW,EAAIb,QACJuM,EAAM1L,EAAIb,MAAMyU,WAAWlI,IAE/B,IAAIf,EAASN,EAAMqB,EAAK1L,GACpBA,EAAIb,QACJwL,EAAS3K,EAAIb,MAAM4U,iBAAiBpJ,IAEpC3K,EAAIR,YACJgM,KAAKhM,WAAWmL,EAAQ3K,EAAIR,YAEhC,IAAI2F,EAAO+M,EAAOvH,EAAQ3K,GAI1B,OAHIA,EAAIb,QACJgG,EAAOnF,EAAIb,MAAM2U,YAAY3O,IAE1BA,CACvB,CACY,MAAO2R,GACH,OAAON,EAAWM,EAClC,GAEQ,OAAO3E,CACf,CACIsE,OAAAA,CAAQnX,EAAQ7G,GACZ,OAAQqe,IAEJ,GADAA,EAAE7d,SAAW,8DACTqG,EAAQ,CACR,MAAMyX,EAAM,iCACN1P,GAAOyP,EAAE7d,QAAU,IAAI,GACvB,SACN,OAAIR,EACOyd,QAAQC,QAAQY,GAEpBA,CACvB,CACY,GAAIte,EACA,OAAOyd,QAAQc,OAAOF,GAE1B,MAAMA,CAAC,CAEnB,ECrTA,MAAMG,GAAiB,IAAI9C,GACpB,SAAS+C,GAAOxL,EAAK1L,GACxB,OAAOiX,GAAe9E,MAAMzG,EAAK1L,EACrC,CAMAkX,GAAO5L,QACH4L,GAAO7C,WAAa,SAAU/I,GAI1B,OAHA2L,GAAe5C,WAAW/I,GAC1B4L,GAAOrC,SAAWoC,GAAepC,SACjCnV,EAAewX,GAAOrC,UACfqC,EACf,EAIAA,GAAOC,YAAcpY,EACrBmY,GAAOrC,SAAWpV,EAIlByX,GAAO3C,IAAM,YAAaH,GAItB,OAHA6C,GAAe1C,OAAOH,GACtB8C,GAAOrC,SAAWoC,GAAepC,SACjCnV,EAAewX,GAAOrC,UACfqC,EACX,EAIAA,GAAO1X,WAAa,SAAUmL,EAAQ6J,GAClC,OAAOyC,GAAezX,WAAWmL,EAAQ6J,EAC7C,EAQA0C,GAAO9E,YAAc6E,GAAe7E,YAIpC8E,GAAOE,OAAShE,GAChB8D,GAAOhF,OAASkB,GAAQjB,MACxB+E,GAAOG,SAAWtF,GAClBmF,GAAOI,aAAenE,GACtB+D,GAAOK,MAAQnH,GACf8G,GAAO7M,MAAQ+F,GAAOI,IACtB0G,GAAOM,UAAYpM,GACnB8L,GAAOO,MAAQ9D,GACfuD,GAAO/E,MAAQ+E,GACQA,GAAO5L,QACJ4L,GAAO7C,WACd6C,GAAO3C,IACA2C,GAAO1X,WACN0X,GAAO9E,YAEZgB,GAAQjB,MACT/B,GAAOI,IAPhB,M,yJCnDZ,MAAM1a,EAAQE,E,wVCPd,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,UCDA,IAA4BJ,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,cACRC,MAAO,CACP4hB,YAAa,CACXhN,KAAMiN,MACNC,UAAU,IAGZ7hB,KAAAA,CAAMC,GCeR,MAAMF,EAAQE,EASR6hB,GAAaxhB,EAAAA,EAAAA,IAAIyhB,OAAOC,aAGxBC,EAAqBA,KACzBH,EAAW3f,MAAQ4f,OAAOC,WAAW,EAIvCD,OAAOG,iBAAiB,SAAUD,GAClCA,KAGAE,EAAAA,EAAAA,KAAgB,KACdJ,OAAOK,oBAAoB,SAAUH,EAAmB,IAI1D,MAAMI,GAAiBC,EAAAA,EAAAA,KAAS,IACvBR,EAAW3f,MAAQ,GAAK,MDfjC,MAAO,CAAC2B,EAAUC,KAChB,MAAMwe,GAAsBte,EAAAA,EAAAA,IAAkB,YACxCue,GAA8Bve,EAAAA,EAAAA,IAAkB,oBAChDwe,GAAuBxe,EAAAA,EAAAA,IAAkB,aACzCye,GAAyBze,EAAAA,EAAAA,IAAkB,eAC3C0e,GAAyB1e,EAAAA,EAAAA,IAAkB,eAC3C2e,GAAoB3e,EAAAA,EAAAA,IAAkB,UAE5C,OAAQU,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAauc,EAAmB,CACpD,aAAcP,EAAelgB,MAC7B0gB,UAAW,GACXC,UAAU,GACT,CACDnK,QAAQvT,EAAAA,EAAAA,KAAS,IAAM,EACrBE,EAAAA,EAAAA,KAAiByD,EAAAA,EAAAA,IAA8C,IAA7BhJ,EAAM4hB,YAAY/d,OAAgB,GAAK7D,EAAM4hB,YAAY,GAAGhZ,SAAU,MAE1GxD,SAASC,EAAAA,EAAAA,KAAS,IAAM,GACrBT,EAAAA,EAAAA,KAAW,IAAOC,EAAAA,EAAAA,IAAoBC,EAAAA,GAAW,MAAMqB,EAAAA,EAAAA,IAAYnG,EAAM4hB,aAAa,CAACvb,EAAMoC,MACpF7D,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAasc,EAAwB,CAAEtd,IAAKmD,GAAS,CACzEua,SAAS3d,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAa2d,IACb3d,EAAAA,EAAAA,IAAa4d,MAEfvd,SAASC,EAAAA,EAAAA,KAAS,IAAM,CACP,WAAdgB,EAAK4c,OACDre,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAamc,EAA6B,CACvDnd,IAAK,EACLO,MAAOQ,EAAK4c,MACX,CACDC,aAAa7d,EAAAA,EAAAA,KAAS,IAAM,EAC1BN,EAAAA,EAAAA,IAAaoe,GAAkB,CAAEpF,SAAU1X,GAAQ,KAAM,EAAG,CAAC,gBAE/D+c,QAAQ/d,EAAAA,EAAAA,KAAS,IAAM,EACrBN,EAAAA,EAAAA,IAAayd,EAAqB,CAAEa,MAAO,UAAY,CACrDje,SAASC,EAAAA,EAAAA,KAAS,IAAMrB,EAAO,KAAOA,EAAO,GAAK,EAChDsf,EAAAA,EAAAA,IAAoB,MAAO,CACzBC,IAAK,SACL3N,IAAK,kHACJ,MAAO,OAEZpQ,EAAG,OAGPA,EAAG,GACF,KAAM,CAAC,YACVgD,EAAAA,EAAAA,IAAoB,IAAI,MAE9BhD,EAAG,GACF,SACD,SAENA,EAAG,GACF,EAAG,CAAC,cAAc,CAEvB,IE7FA,MAAM,GAAc,GAEpB,U,UCJOkC,GAAG,gB,+JAAR7C,EAAAA,EAAAA,IASM,MATN2e,GASM,EARJze,EAAAA,EAAAA,IAOS0e,EAAA,CAPAze,MAAO,CAAAC,MAAA,OAAmB8d,UAAU,G,CAFjD3d,SAAAC,EAAAA,EAAAA,KAGM,IAKe,EALfN,EAAAA,EAAAA,IAKe2e,EAAA,MARrBte,SAAAC,EAAAA,EAAAA,KAIQ,IAAkD,EAAlDN,EAAAA,EAAAA,IAAkD4e,EAAA,MAJ1Dve,SAAAC,EAAAA,EAAAA,KAI4B,IAASrB,EAAA,KAAAA,EAAA,KAJrCuB,EAAAA,EAAAA,IAI4B,iBAJ5BC,EAAA,KAKQT,EAAAA,EAAAA,IAEyB6e,EAAA,MAPjCxe,SAAAC,EAAAA,EAAAA,KAKgC,IAExBrB,EAAA,KAAAA,EAAA,KAPRuB,EAAAA,EAAAA,IAKgC,+BALhCC,EAAA,OAAAA,EAAA,OAAAA,EAAA,K,CCCA,MAAMqe,GAAS,CAAC,EAKV,IAA2B,QAAgBA,GAAQ,CAAC,CAAC,SAASC,IAAQ,CAAC,YAAY,qBAEzF,UCLA,MAAMN,GAAa,CACjB9b,GAAI,aACJnH,IAAK,SAMP,QAA4BT,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,aACRC,MAAO,CACP+jB,WAAY,CACVnP,KAAMoP,QACNlC,UAAU,IAGZmC,MAAO,CAAC,eACRhkB,KAAAA,CAAMC,GAAWgkB,KAAMC,ICsBzB,MAAMnkB,EAAQE,EAORyP,GAAOpP,EAAAA,EAAAA,IAAI,WAEX2jB,EAAOC,EDtBb,MAAO,CAACpgB,EAAUC,KAChB,MAAMogB,GAAsBlgB,EAAAA,EAAAA,IAAkB,YACxCmgB,GAA4BngB,EAAAA,EAAAA,IAAkB,kBAC9C4D,GAAqB5D,EAAAA,EAAAA,IAAkB,WACvCogB,GAAwBpgB,EAAAA,EAAAA,IAAkB,cAC1CqgB,GAA8BrgB,EAAAA,EAAAA,IAAkB,oBAChDsgB,GAAyBtgB,EAAAA,EAAAA,IAAkB,eAC3CugB,GAAuBvgB,EAAAA,EAAAA,IAAkB,aACzCwgB,GAA4BxgB,EAAAA,EAAAA,IAAkB,kBAC9CygB,GAA4BzgB,EAAAA,EAAAA,IAAkB,kBAC9C0gB,GAAsB1gB,EAAAA,EAAAA,IAAkB,YAE9C,OAAQU,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO2e,GAAY,EAC3Dze,EAAAA,EAAAA,IAAa+C,EAAoB,CAAEO,UAAW,YAAc,CAC1DjD,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAasf,EAA2B,CAAEzP,KAAM,WAAa,CAC3DxP,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAaqf,EAAqB,CAChCxP,KAAM,OACNtM,KAAM,QACL,CACDlD,SAASC,EAAAA,EAAAA,KAAS,IAAMrB,EAAO,KAAOA,EAAO,GAAK,EAChDuB,EAAAA,EAAAA,IAAiB,YAEnBC,EAAG,OAGPA,EAAG,OAGPA,EAAG,KAELT,EAAAA,EAAAA,IAAa6f,EAAqB,CAAEC,MAAO,eAAiB,CAC1Dzf,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAawf,EAA6B,KAAM,CAC9Cnf,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAauf,EAAuB,CAClC,cAAe3U,EAAKvN,MACpB,sBAAuB4B,EAAO,KAAOA,EAAO,GAAMmB,GAAkBwK,EAAMvN,MAAQ+C,GAClFc,YAAa,QACb,aAAc,CAAEpC,OAAQ,IAAMihB,WAAW,GACzC,YAAa,CAAEC,QAAS,EAAGC,QAAS,GACpC,cAAe,GACf,kBAAmB,IAClB,KAAM,EAAG,CAAC,mBAEfxf,EAAG,KAELT,EAAAA,EAAAA,IAAa4f,EAA2B,KAAM,CAC5Cvf,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBsB,EAAAA,EAAAA,KAAgB5B,EAAAA,EAAAA,IAAa2f,EAA2B,CAAEO,SAAU,IAAM,CACxE7f,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBsB,EAAAA,EAAAA,KAAgB5B,EAAAA,EAAAA,IAAaqf,EAAqB,KAAM,CACtDc,MAAM7f,EAAAA,EAAAA,KAAS,IAAM,EACnBN,EAAAA,EAAAA,IAAayf,MAEfhf,EAAG,GACF,KAAM,CACP,CAACqB,EAAAA,GAAQ8I,EAAKvN,MAAMyB,OAAS,QAE/BkB,EAAAA,EAAAA,IAAaqf,EAAqB,CAChCe,QAASnlB,EAAM+jB,YACd,CACDmB,MAAM7f,EAAAA,EAAAA,KAAS,IAAM,EACnBN,EAAAA,EAAAA,IAAa0f,EAAsB,CACjC5b,QAAS7E,EAAO,KAAOA,EAAO,GAAMmB,GAAiB+e,EAAK,cAAevU,EAAKvN,aAGlFoD,EAAG,GACF,EAAG,CAAC,eAETA,EAAG,GACF,KAAM,CACP,CAACqB,EAAAA,GAAQ8I,EAAKvN,YAGlBoD,EAAG,OAGPA,EAAG,IAELxB,EAAO,KAAOA,EAAO,IAAKsf,EAAAA,EAAAA,IAAoB,OAAQ,CAAEuB,MAAO,eAAiB,SAAU,KACzF,IAAI,CAET,IE3GA,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,UCOA,IAA4B/kB,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,YACRE,KAAAA,CAAMC,GCiBR,MAAMC,GAAYC,EAAAA,EAAAA,KACZ4G,GAAQC,EAAAA,EAAAA,MAER8c,IADSqB,EAAAA,EAAAA,OACI7kB,EAAAA,EAAAA,KAAI,IACjB8kB,GAAS9kB,EAAAA,EAAAA,IAA+B,MACxCqhB,GAAcrhB,EAAAA,EAAAA,IAAI,IAElB+kB,EAAa3iB,UACjB,GAAK+E,EAAL,CACA2d,EAAOjjB,MAAQsF,EAEf,IACE,MAAM9E,QAAYC,EAAAA,EAAI0iB,YAAY,CAChCF,OAAQ3d,EACR8d,OAAQrlB,EAAUslB,gBAAgB3kB,MAEZ,MAApB8B,EAAIG,aACNC,EAAAA,EAAQC,QAAQL,EAAIO,SACpBye,EAAYxf,MAAQQ,EAAIM,KAAK7B,SAC7BkC,QAAQC,IAAIZ,EAAIM,KAAK7B,WAChB2B,EAAAA,EAAQK,MAAMT,EAAIO,QAC3B,CAAE,MAAOG,GACPC,QAAQC,IAAI,OACd,CAfe,CAef,EAGIkiB,EAAeA,IACnB3B,EAAW3hB,OAAQ,EACnB,MAAMujB,EAAS,IAAIC,UAAU,+BAC7B,IAAIC,EAAmB,KAEvBF,EAAOG,OAAS,WACdviB,QAAQC,IAAI,kBACZoe,EAAYxf,MAAMC,KAAK,CACrBuG,QAAS8c,EACTzC,KAAM,SAERrB,EAAYxf,MAAMC,KAAK,CACrBuG,QAAS,GACTqa,KAAM,cAER4C,EAAmBjE,EAAYxf,MAAMyB,OAAS,EAE9C8hB,EAAOI,KAAKC,KAAKC,UAAU,CACzBZ,OAAQA,EAAOjjB,MACfojB,OAAQrlB,EAAUslB,gBAAgB3kB,IAClC4kB,YAAaA,IAEjB,EAEAC,EAAOO,UAAY,SAASC,GACtBA,EAAMjjB,OAAM0e,EAAYxf,MAAMyjB,GAAkB,YAAcM,EAAMjjB,KAC1E,EAEAyiB,EAAOS,QAAU,SAAU/iB,GACzBue,EAAYxf,MAAMyjB,GAAkB,WAAaxiB,EACjD0gB,EAAW3hB,OAAQ,CACrB,EAEAujB,EAAOU,QAAU,WACf9iB,QAAQC,IAAI,kBACZugB,EAAW3hB,OAAQ,CACrB,CAAC,EDNH,OCSAqB,EAAAA,EAAAA,KAAM,IAAMuD,EAAMW,OAAOD,IAAI4d,EAAY,CAAE1d,WAAW,KAEtDjE,EAAAA,EAAAA,KAAU,KACR0hB,EAAOjjB,MAAQ4E,EAAMW,OAAOD,EAAY,IDZnC,CAAC3D,EAAUC,KAChB,MAAM2gB,GAA4BzgB,EAAAA,EAAAA,IAAkB,kBAC9CqgB,GAA8BrgB,EAAAA,EAAAA,IAAkB,oBAChDoiB,GAA6BpiB,EAAAA,EAAAA,IAAkB,mBAC/C0gB,GAAsB1gB,EAAAA,EAAAA,IAAkB,YAE9C,OAAQU,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAase,EAAqB,CAAEC,MAAO,oBAAsB,CACrFzf,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAa4f,EAA2B,CAAE4B,YAAa,IAAM,CAC3D7d,SAASrD,EAAAA,EAAAA,KAAS,EAAGmhB,eAAgB,CACnCA,IACK5hB,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,KAAaF,EAAAA,EAAAA,IAAOqgB,EAAAA,GAAiB,CAAEnhB,IAAK,OAC1DV,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,KAAaF,EAAAA,EAAAA,IAAOsgB,EAAAA,GAAgB,CAAEphB,IAAK,QAEhEF,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAa4hB,MAEfnhB,EAAG,KAELT,EAAAA,EAAAA,IAAa6f,EAAqB,KAAM,CACtCxf,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAawf,EAA6B,KAAM,CAC9Cnf,SAASC,EAAAA,EAAAA,KAAS,IAAM,CACpBggB,EAAOjjB,QAEJwC,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAasgB,GAAa,CACvCthB,IAAK,EACLsc,YAAaA,EAAYxf,OACxB,KAAM,EAAG,CAAC,mBAJZwC,EAAAA,EAAAA,OAAc0B,EAAAA,EAAAA,IAAaugB,GAAc,CAAEvhB,IAAK,QAMvDE,EAAG,KAELT,EAAAA,EAAAA,IAAauhB,EAA4B,KAAM,CAC7ClhB,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBN,EAAAA,EAAAA,IAAa+hB,GAAY,CACvBC,cAAerB,EACf3B,WAAYA,EAAW3hB,OACtB,KAAM,EAAG,CAAC,kBAEfoD,EAAG,OAGPA,EAAG,OAGPA,EAAG,GACH,CAEJ,IEpIA,MAAM,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://frontend/./src/components/chat/menu/ChatMenuNewChat.vue?65a5","webpack://frontend/./src/components/chat/menu/ChatMenuNewChat.vue","webpack://frontend/./src/components/chat/menu/ChatMenuNewChat.vue?5dc4","webpack://frontend/./src/components/chat/menu/ChatMenu.vue?2860","webpack://frontend/./src/components/chat/menu/ChatMenu.vue","webpack://frontend/./src/components/chat/menu/ChatMenu.vue?f005","webpack://frontend/../src/defaults.ts","webpack://frontend/../src/rules.ts","webpack://frontend/../src/helpers.ts","webpack://frontend/../src/Tokenizer.ts","webpack://frontend/../src/Lexer.ts","webpack://frontend/../src/Renderer.ts","webpack://frontend/../src/TextRenderer.ts","webpack://frontend/../src/Parser.ts","webpack://frontend/../src/Hooks.ts","webpack://frontend/../src/Instance.ts","webpack://frontend/../src/marked.ts","webpack://frontend/./src/components/chat/content/MarkdownRenderer.vue","webpack://frontend/./src/components/chat/content/MarkdownRenderer.vue?4826","webpack://frontend/./src/components/chat/content/ChatContent.vue?332b","webpack://frontend/./src/components/chat/content/ChatContent.vue","webpack://frontend/./src/components/chat/content/ChatContent.vue?8a42","webpack://frontend/./src/components/chat/content/ContentEmpty.vue","webpack://frontend/./src/components/chat/content/ContentEmpty.vue?41ae","webpack://frontend/./src/components/chat/footer/ChatFooter.vue?d0c0","webpack://frontend/./src/components/chat/footer/ChatFooter.vue","webpack://frontend/./src/components/chat/footer/ChatFooter.vue?a039","webpack://frontend/./src/components/chat/ChatIndex.vue?a57f","webpack://frontend/./src/components/chat/ChatIndex.vue","webpack://frontend/./src/components/chat/ChatIndex.vue?00d7"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, vShow as _vShow, withDirectives as _withDirectives } from \"vue\"\n\nimport { onMounted, reactive, ref, watch } from \"vue\";\nimport { useUserStore } from \"@/store\";\nimport { Api } from \"@/api/api\";\nimport { Message } from \"@arco-design/web-vue\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ChatMenuNewChat',\n  props: [\"getData\"],\n  setup(__props) {\n\nconst UserStore = useUserStore();\nconst props = __props;\n\n// 用户信息\nconst user_info = UserStore.user_info;\n\n// 新建聊天的弹窗开关\nconst new_chat_visible = ref<boolean>(false);\n// 是否选中\nconst selected_keys = ref<string[]>([\"\"]);\n// 加载\nconst ok_loading = ref<boolean>(false);\n\nconst descriptionsData = ref<\n  {\n    label: string;\n    value: string;\n  }[]\n>([]);\n\n// 表单数据\nconst form = reactive({\n  user_id: user_info._id,\n  user_name: user_info.username,\n  chat_title: \"\",\n  system: \"\",\n  chat_parameters: {\n    model: \"\",\n    messages: [],\n    top_p: 0.7,\n    temperature: 0.7,\n    presence_penalty: null,\n    max_tokens: null,\n    response_foramt: \"text\",\n    seed: null,\n    stream: false,\n    stop: null,\n    tools: null,\n    stream_options: null,\n    enable_search: false,\n  },\n});\n\nconst handleChange = (modelInfo: {}) => {\n  form.chat_parameters.model = modelInfo.model_call;\n\n  descriptionsData.value.push({\n    label: \"使用模型\",\n    value: modelInfo.model_call,\n  });\n  descriptionsData.value.push({\n    label: \"模型描述\",\n    value: modelInfo.model_introduction,\n  });\n  descriptionsData.value.push({\n    label: \"总额度\",\n    value: modelInfo.limit,\n  });\n  descriptionsData.value.push({\n    label: \"剩余额度\",\n    value: modelInfo.residue_limit,\n  });\n};\n\n// 创建新的聊天\nconst handleOk = async () => {\n  ok_loading.value = true;\n  if (form.chat_title === \"\") form.chat_title = \"新的聊天\";\n\n  try {\n    const res = await Api.add_chat(form);\n\n    if (res.status_code === 200) {\n      Message.success(res.data.message);\n      props.getData();\n    } else {\n      Message.error(res.message);\n    }\n  } catch (err) {\n    console.log(\"创建失败\");\n  } finally {\n    new_chat_visible.value = false;\n    ok_loading.value = false;\n    form.chat_title = \"\";\n    form.system = \"\";\n    form.chat_parameters = {\n      model: \"\",\n      messages: [],\n      top_p: 0.7,\n      temperature: 0.7,\n      presence_penalty: null,\n      max_tokens: null,\n      response_foramt: \"text\",\n      seed: null,\n      stream: false,\n      stop: null,\n      tools: null,\n      stream_options: null,\n      enable_search: false,\n    };\n    descriptionsData.value = [];\n  }\n};\n\n// 控制新建聊天的菜单选中\nwatch(new_chat_visible, (new_value) => {\n  if (new_value) {\n    selected_keys.value = [\"1\"];\n  } else {\n    selected_keys.value = [\"\"];\n  }\n});\n\n// 获取模型列表\nonMounted(async () => {\n  if (UserStore.gettersModelList.length === 0) {\n    await UserStore.getModelList();\n  }\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_menu_item = _resolveComponent(\"a-menu-item\")!\n  const _component_a_menu = _resolveComponent(\"a-menu\")!\n  const _component_a_input = _resolveComponent(\"a-input\")!\n  const _component_a_form_item = _resolveComponent(\"a-form-item\")!\n  const _component_a_option = _resolveComponent(\"a-option\")!\n  const _component_a_select = _resolveComponent(\"a-select\")!\n  const _component_a_slider = _resolveComponent(\"a-slider\")!\n  const _component_a_form = _resolveComponent(\"a-form\")!\n  const _component_a_descriptions = _resolveComponent(\"a-descriptions\")!\n  const _component_a_drawer = _resolveComponent(\"a-drawer\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_component_a_menu, {\n      style: { width: '100%' },\n      \"selected-keys\": selected_keys.value,\n      onMenuItemClick: _cache[0] || (_cache[0] = ($event: any) => (new_chat_visible.value = true))\n    }, {\n      default: _withCtx(() => [\n        _createVNode(_component_a_menu_item, { key: \"1\" }, {\n          default: _withCtx(() => _cache[7] || (_cache[7] = [\n            _createTextVNode(\" 创建聊天\")\n          ])),\n          _: 1\n        })\n      ]),\n      _: 1\n    }, 8, [\"selected-keys\"]),\n    _createVNode(_component_a_drawer, {\n      width: 600,\n      visible: new_chat_visible.value,\n      onOk: handleOk,\n      onCancel: _cache[6] || (_cache[6] = ($event: any) => (new_chat_visible.value = false)),\n      unmountOnClose: \"\",\n      \"ok-loading\": ok_loading.value,\n      \"hide-cancel\": ok_loading.value\n    }, {\n      title: _withCtx(() => _cache[8] || (_cache[8] = [\n        _createTextVNode(\"创建新的聊天\")\n      ])),\n      default: _withCtx(() => [\n        _createVNode(_component_a_form, { model: form }, {\n          default: _withCtx(() => [\n            _createVNode(_component_a_form_item, {\n              field: \"chat_title\",\n              tooltip: \"用来命名对话\",\n              label: \"标题\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_input, {\n                  modelValue: form.chat_title,\n                  \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((form.chat_title) = $event)),\n                  placeholder: \"请输入标题\"\n                }, null, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_a_form_item, {\n              field: \"system\",\n              label: \"预设\",\n              tooltip: \"\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_select, {\n                  modelValue: form.system,\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((form.system) = $event)),\n                  placeholder: \"请选择预设\",\n                  \"allow-clear\": \"\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_a_option, { value: \"你好\" }, {\n                      default: _withCtx(() => _cache[9] || (_cache[9] = [\n                        _createTextVNode(\"你好\")\n                      ])),\n                      _: 1\n                    }),\n                    _createVNode(_component_a_option, { value: \"小红书\" }, {\n                      default: _withCtx(() => _cache[10] || (_cache[10] = [\n                        _createTextVNode(\"小红书\")\n                      ])),\n                      _: 1\n                    })\n                  ]),\n                  _: 1\n                }, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_a_form_item, {\n              field: \"chat_parameters.model\",\n              label: \"模型\",\n              tooltip: \"进行对话的模型\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_select, {\n                  modelValue: form.chat_parameters.model,\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((form.chat_parameters.model) = $event)),\n                  placeholder: \"请选择模型\",\n                  \"allow-clear\": \"\",\n                  \"value-key\": \"model_call\",\n                  onChange: handleChange\n                }, {\n                  default: _withCtx(() => [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(UserStore).gettersModelList, (item) => {\n                      return (_openBlock(), _createBlock(_component_a_option, {\n                        value: item,\n                        label: item.model_name\n                      }, null, 8, [\"value\", \"label\"]))\n                    }), 256))\n                  ]),\n                  _: 1\n                }, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_a_form_item, {\n              field: \"system\",\n              label: \"生成的随机性\",\n              tooltip: \"取值越大，生成的随机性越高；取值越低，生成的确定性越高。\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_slider, {\n                  modelValue: form.chat_parameters.top_p,\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((form.chat_parameters.top_p) = $event)),\n                  min: 0,\n                  max: 1.0,\n                  step: 0.1\n                }, null, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_a_form_item, {\n              field: \"system\",\n              label: \"多样性\",\n              tooltip: \"控制模型回复的随机性和多样性\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_slider, {\n                  modelValue: form.chat_parameters.temperature,\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((form.chat_parameters.temperature) = $event)),\n                  min: 0.1,\n                  max: 1.9,\n                  step: 0.1\n                }, null, 8, [\"modelValue\"])\n              ]),\n              _: 1\n            })\n          ]),\n          _: 1\n        }, 8, [\"model\"]),\n        _withDirectives(_createVNode(_component_a_descriptions, {\n          style: {\"margin-top\":\"10px\"},\n          data: descriptionsData.value,\n          title: \"模型信息\",\n          column: 1\n        }, null, 8, [\"data\"]), [\n          [_vShow, descriptionsData.value.length]\n        ])\n      ]),\n      _: 1\n    }, 8, [\"visible\", \"ok-loading\", \"hide-cancel\"])\n  ], 64))\n}\n}\n\n})","<template>\n  <a-menu\n    :style=\"{ width: '100%' }\"\n    :selected-keys=\"selected_keys\"\n    @menu-item-click=\"new_chat_visible = true\"\n  >\n    <a-menu-item key=\"1\"> 创建聊天</a-menu-item>\n  </a-menu>\n\n  <a-drawer\n    :width=\"600\"\n    :visible=\"new_chat_visible\"\n    @ok=\"handleOk\"\n    @cancel=\"new_chat_visible = false\"\n    unmountOnClose\n    :ok-loading=\"ok_loading\"\n    :hide-cancel=\"ok_loading\"\n  >\n    <template #title>创建新的聊天</template>\n    <a-form :model=\"form\">\n      <a-form-item field=\"chat_title\" tooltip=\"用来命名对话\" label=\"标题\">\n        <a-input v-model=\"form.chat_title\" placeholder=\"请输入标题\" />\n      </a-form-item>\n\n      <a-form-item field=\"system\" label=\"预设\" tooltip=\"\">\n        <a-select v-model=\"form.system\" placeholder=\"请选择预设\" allow-clear>\n          <a-option value=\"你好\">你好</a-option>\n          <a-option value=\"小红书\">小红书</a-option>\n        </a-select>\n      </a-form-item>\n\n      <a-form-item\n        field=\"chat_parameters.model\"\n        label=\"模型\"\n        tooltip=\"进行对话的模型\"\n      >\n        <a-select\n          v-model=\"form.chat_parameters.model\"\n          placeholder=\"请选择模型\"\n          allow-clear\n          value-key=\"model_call\"\n          @change=\"handleChange\"\n        >\n          <a-option\n            v-for=\"item of UserStore.gettersModelList\"\n            :value=\"item\"\n            :label=\"item.model_name\"\n          />\n        </a-select>\n      </a-form-item>\n\n      <a-form-item\n        field=\"system\"\n        label=\"生成的随机性\"\n        tooltip=\"取值越大，生成的随机性越高；取值越低，生成的确定性越高。\"\n      >\n        <a-slider\n          v-model=\"form.chat_parameters.top_p\"\n          :min=\"0\"\n          :max=\"1.0\"\n          :step=\"0.1\"\n        />\n      </a-form-item>\n\n      <a-form-item\n        field=\"system\"\n        label=\"多样性\"\n        tooltip=\"控制模型回复的随机性和多样性\"\n      >\n        <a-slider\n          v-model=\"form.chat_parameters.temperature\"\n          :min=\"0.1\"\n          :max=\"1.9\"\n          :step=\"0.1\"\n        />\n      </a-form-item>\n\n      <!--      <a-form-item field=\"system\" label=\"联网搜索\" tooltip=\"是否开启联网搜索\">-->\n      <!--        <a-switch v-model=\"form.chat_parameters.enable_search\">-->\n      <!--          <template #checked> 开启 </template>-->\n      <!--          <template #unchecked> 关闭 </template>-->\n      <!--        </a-switch>-->\n      <!--      </a-form-item>-->\n    </a-form>\n\n    <a-descriptions\n      v-show=\"descriptionsData.length\"\n      style=\"margin-top: 10px\"\n      :data=\"descriptionsData\"\n      title=\"模型信息\"\n      :column=\"1\"\n    />\n  </a-drawer>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, reactive, ref, watch } from \"vue\";\nimport { useUserStore } from \"@/store\";\nimport { Api } from \"@/api/api\";\nimport { Message } from \"@arco-design/web-vue\";\n\nconst UserStore = useUserStore();\nconst props = defineProps([\"getData\"]);\n\n// 用户信息\nconst user_info = UserStore.user_info;\n\n// 新建聊天的弹窗开关\nconst new_chat_visible = ref<boolean>(false);\n// 是否选中\nconst selected_keys = ref<string[]>([\"\"]);\n// 加载\nconst ok_loading = ref<boolean>(false);\n\nconst descriptionsData = ref<\n  {\n    label: string;\n    value: string;\n  }[]\n>([]);\n\n// 表单数据\nconst form = reactive({\n  user_id: user_info._id,\n  user_name: user_info.username,\n  chat_title: \"\",\n  system: \"\",\n  chat_parameters: {\n    model: \"\",\n    messages: [],\n    top_p: 0.7,\n    temperature: 0.7,\n    presence_penalty: null,\n    max_tokens: null,\n    response_foramt: \"text\",\n    seed: null,\n    stream: false,\n    stop: null,\n    tools: null,\n    stream_options: null,\n    enable_search: false,\n  },\n});\n\nconst handleChange = (modelInfo: {}) => {\n  form.chat_parameters.model = modelInfo.model_call;\n\n  descriptionsData.value.push({\n    label: \"使用模型\",\n    value: modelInfo.model_call,\n  });\n  descriptionsData.value.push({\n    label: \"模型描述\",\n    value: modelInfo.model_introduction,\n  });\n  descriptionsData.value.push({\n    label: \"总额度\",\n    value: modelInfo.limit,\n  });\n  descriptionsData.value.push({\n    label: \"剩余额度\",\n    value: modelInfo.residue_limit,\n  });\n};\n\n// 创建新的聊天\nconst handleOk = async () => {\n  ok_loading.value = true;\n  if (form.chat_title === \"\") form.chat_title = \"新的聊天\";\n\n  try {\n    const res = await Api.add_chat(form);\n\n    if (res.status_code === 200) {\n      Message.success(res.data.message);\n      props.getData();\n    } else {\n      Message.error(res.message);\n    }\n  } catch (err) {\n    console.log(\"创建失败\");\n  } finally {\n    new_chat_visible.value = false;\n    ok_loading.value = false;\n    form.chat_title = \"\";\n    form.system = \"\";\n    form.chat_parameters = {\n      model: \"\",\n      messages: [],\n      top_p: 0.7,\n      temperature: 0.7,\n      presence_penalty: null,\n      max_tokens: null,\n      response_foramt: \"text\",\n      seed: null,\n      stream: false,\n      stop: null,\n      tools: null,\n      stream_options: null,\n      enable_search: false,\n    };\n    descriptionsData.value = [];\n  }\n};\n\n// 控制新建聊天的菜单选中\nwatch(new_chat_visible, (new_value) => {\n  if (new_value) {\n    selected_keys.value = [\"1\"];\n  } else {\n    selected_keys.value = [\"\"];\n  }\n});\n\n// 获取模型列表\nonMounted(async () => {\n  if (UserStore.gettersModelList.length === 0) {\n    await UserStore.getModelList();\n  }\n});\n</script>\n\n<style scoped></style>\n","import script from \"./ChatMenuNewChat.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ChatMenuNewChat.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\n\nimport { Message } from \"@arco-design/web-vue\";\nimport ChatMenuNewChat from \"@/components/chat/menu/ChatMenuNewChat.vue\";\nimport { onMounted, ref, watch } from \"vue\";\nimport { Api } from \"@/api/api\";\nimport { useUserStore } from \"@/store\";\nimport router from \"@/router\";\nimport { useRoute, useRouter } from \"vue-router\";\n// 用户信息\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ChatMenu',\n  setup(__props) {\n\nconst user_info = useUserStore().user_info;\nconst menuSelected = ref<string[]>([\"1\"]);\nconst route = useRoute();\n\n// 历史聊天\nconst chat_list = ref<\n  {\n    _id: string;\n    chat_title: string;\n    message_id: string;\n  }[]\n>([]);\n\n// 加载状态\nconst chat_list_loading = ref(true);\n\nconst onClickMenuItem = (key: string) => router.push(`/chat/${key}`);\n\n// 请求数据\nconst getData = async () => {\n  try {\n    const res = await Api.get_chat_list({\n      user_id: user_info._id,\n    });\n\n    if (res.status_code === 200) {\n      chat_list.value = res.data;\n    } else {\n      Message.error(res.message);\n    }\n  } catch (err) {\n    console.log(\"获取聊天失败\");\n  } finally {\n    chat_list_loading.value = false;\n  }\n};\n\n// 删除聊天\nconst deleteChat = async (data) => {\n  try {\n    const res = await Api.delete_chat({\n      user_id: user_info._id,\n      ...data,\n    });\n\n    if (res.status_code === 200) {\n      Message.success(res.message);\n      await getData();\n    } else {\n      Message.error(res.message);\n    }\n  } catch (err) {\n    Message.error(\"删除失败\");\n  }\n};\n\n// todo历史聊天需要滚动\n\nonMounted(async () => getData());\n\nconst setMenuSelected = (id: string) => {\n  menuSelected.value = [id]\n};\n\n// 侦听路由的参数，以便再次获取数据\nwatch(() => route.params.id, setMenuSelected, { immediate: true });\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_skeleton_line = _resolveComponent(\"a-skeleton-line\")!\n  const _component_a_space = _resolveComponent(\"a-space\")!\n  const _component_a_skeleton = _resolveComponent(\"a-skeleton\")!\n  const _component_a_empty = _resolveComponent(\"a-empty\")!\n  const _component_a_menu_item = _resolveComponent(\"a-menu-item\")!\n  const _component_a_doption = _resolveComponent(\"a-doption\")!\n  const _component_a_dropdown = _resolveComponent(\"a-dropdown\")!\n  const _component_a_menu = _resolveComponent(\"a-menu\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ChatMenuNewChat, { getData: getData }),\n    _createVNode(_component_a_menu, {\n      style: { width: '100%' },\n      onMenuItemClick: onClickMenuItem,\n      \"default-selected-keys\": menuSelected.value\n    }, {\n      default: _withCtx(() => [\n        (chat_list_loading.value)\n          ? (_openBlock(), _createBlock(_component_a_skeleton, {\n              key: 0,\n              animation: \"\"\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_space, {\n                  direction: \"vertical\",\n                  style: { width: '100%' },\n                  size: \"large\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_a_skeleton_line, { rows: 3 })\n                  ]),\n                  _: 1\n                })\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        (chat_list.value.length == 0)\n          ? (_openBlock(), _createBlock(_component_a_empty, { key: 1 }))\n          : (_openBlock(true), _createElementBlock(_Fragment, { key: 2 }, _renderList(chat_list.value, (item, index) => {\n              return (_openBlock(), _createBlock(_component_a_dropdown, {\n                trigger: \"contextMenu\",\n                alignPoint: \"\",\n                key: index\n              }, {\n                content: _withCtx(() => [\n                  _createVNode(_component_a_doption, {\n                    onClick: ($event: any) => (\n              deleteChat({\n                chat_id: item._id,\n                message_id: item.message_id,\n              })\n            )\n                  }, {\n                    default: _withCtx(() => _cache[0] || (_cache[0] = [\n                      _createTextVNode(\"删除此记录 \")\n                    ])),\n                    _: 2\n                  }, 1032, [\"onClick\"])\n                ]),\n                default: _withCtx(() => [\n                  (_openBlock(), _createBlock(_component_a_menu_item, {\n                    key: item._id\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(item.chat_title), 1)\n                    ]),\n                    _: 2\n                  }, 1024))\n                ]),\n                _: 2\n              }, 1024))\n            }), 128))\n      ]),\n      _: 1\n    }, 8, [\"default-selected-keys\"])\n  ], 64))\n}\n}\n\n})","<template>\n  <ChatMenuNewChat :getData=\"getData\" />\n\n  <a-menu\n    :style=\"{ width: '100%' }\"\n    @menu-item-click=\"onClickMenuItem\"\n    :default-selected-keys=\"menuSelected\"\n  >\n    <!--加载-->\n    <a-skeleton animation v-if=\"chat_list_loading\">\n      <a-space direction=\"vertical\" :style=\"{ width: '100%' }\" size=\"large\">\n        <a-skeleton-line :rows=\"3\" />\n      </a-space>\n    </a-skeleton>\n\n    <!-- 空 -->\n    <a-empty v-if=\"chat_list.length == 0\" />\n\n    <!--历史-->\n    <template v-else>\n      <a-dropdown\n        trigger=\"contextMenu\"\n        alignPoint\n        v-for=\"(item, index) in chat_list\"\n        :key=\"index\"\n      >\n        <a-menu-item :key=\"item._id\">{{ item.chat_title }}</a-menu-item>\n        <template #content>\n          <a-doption\n            @click=\"\n              deleteChat({\n                chat_id: item._id,\n                message_id: item.message_id,\n              })\n            \"\n            >删除此记录\n          </a-doption>\n        </template>\n      </a-dropdown>\n    </template>\n  </a-menu>\n</template>\n\n<script setup lang=\"ts\">\nimport { Message } from \"@arco-design/web-vue\";\nimport ChatMenuNewChat from \"@/components/chat/menu/ChatMenuNewChat.vue\";\nimport { onMounted, ref, watch } from \"vue\";\nimport { Api } from \"@/api/api\";\nimport { useUserStore } from \"@/store\";\nimport router from \"@/router\";\nimport { useRoute, useRouter } from \"vue-router\";\n// 用户信息\nconst user_info = useUserStore().user_info;\nconst menuSelected = ref<string[]>([\"1\"]);\nconst route = useRoute();\n\n// 历史聊天\nconst chat_list = ref<\n  {\n    _id: string;\n    chat_title: string;\n    message_id: string;\n  }[]\n>([]);\n\n// 加载状态\nconst chat_list_loading = ref(true);\n\nconst onClickMenuItem = (key: string) => router.push(`/chat/${key}`);\n\n// 请求数据\nconst getData = async () => {\n  try {\n    const res = await Api.get_chat_list({\n      user_id: user_info._id,\n    });\n\n    if (res.status_code === 200) {\n      chat_list.value = res.data;\n    } else {\n      Message.error(res.message);\n    }\n  } catch (err) {\n    console.log(\"获取聊天失败\");\n  } finally {\n    chat_list_loading.value = false;\n  }\n};\n\n// 删除聊天\nconst deleteChat = async (data) => {\n  try {\n    const res = await Api.delete_chat({\n      user_id: user_info._id,\n      ...data,\n    });\n\n    if (res.status_code === 200) {\n      Message.success(res.message);\n      await getData();\n    } else {\n      Message.error(res.message);\n    }\n  } catch (err) {\n    Message.error(\"删除失败\");\n  }\n};\n\n// todo历史聊天需要滚动\n\nonMounted(async () => getData());\n\nconst setMenuSelected = (id: string) => {\n  menuSelected.value = [id]\n};\n\n// 侦听路由的参数，以便再次获取数据\nwatch(() => route.params.id, setMenuSelected, { immediate: true });\n\n</script>\n\n<style scoped></style>\n","import script from \"./ChatMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ChatMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","/**\n * Gets the original marked default options.\n */\nexport function _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nexport let _defaults = _getDefaults();\nexport function changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n","const noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nexport const other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull |blockCode|fences|blockquote|heading|html)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nexport const block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nexport const inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n","import { other } from './rules.ts';\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nexport function escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nexport function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(other.unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nexport function cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nexport function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nexport function rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nexport function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n","import { _defaults } from './defaults.ts';\nimport { rtrim, splitCells, findClosingBracket, } from './helpers.ts';\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text,\n    };\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nexport class _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n","import { _Tokenizer } from './Tokenizer.ts';\nimport { _defaults } from './defaults.ts';\nimport { other, block, inline } from './rules.ts';\n/**\n * Block Lexer\n */\nexport class _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n","import { _defaults } from './defaults.ts';\nimport { cleanUrl, escape, } from './helpers.ts';\nimport { other } from './rules.ts';\n/**\n * Renderer\n */\nexport class _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nexport class _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n","import { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _defaults } from './defaults.ts';\n/**\n * Parsing & Compiling\n */\nexport class _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n","import { _defaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nexport class _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n","import { _getDefaults } from './defaults.ts';\nimport { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { escape } from './helpers.ts';\nexport class Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n","import { _Lexer } from './Lexer.ts';\nimport { _Parser } from './Parser.ts';\nimport { _Tokenizer } from './Tokenizer.ts';\nimport { _Renderer } from './Renderer.ts';\nimport { _TextRenderer } from './TextRenderer.ts';\nimport { _Hooks } from './Hooks.ts';\nimport { Marked } from './Instance.ts';\nimport { _getDefaults, changeDefaults, _defaults, } from './defaults.ts';\nconst markedInstance = new Marked();\nexport function marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nexport const options = marked.options;\nexport const setOptions = marked.setOptions;\nexport const use = marked.use;\nexport const walkTokens = marked.walkTokens;\nexport const parseInline = marked.parseInline;\nexport const parse = marked;\nexport const parser = _Parser.parse;\nexport const lexer = _Lexer.lex;\nexport { _defaults as defaults, _getDefaults as getDefaults } from './defaults.ts';\nexport { _Lexer as Lexer } from './Lexer.ts';\nexport { _Parser as Parser } from './Parser.ts';\nexport { _Tokenizer as Tokenizer } from './Tokenizer.ts';\nexport { _Renderer as Renderer } from './Renderer.ts';\nexport { _TextRenderer as TextRenderer } from './TextRenderer.ts';\nexport { _Hooks as Hooks } from './Hooks.ts';\nexport { Marked } from './Instance.ts';\n","<template>\n  <div v-if=\"props.markdown['id']\">\n    <div v-html=\"marked.parse( props.markdown['choices'][0]['delta']['content'])\" class=\"markdown-content\" />\n  </div>\n  <div v-else>\n    <div v-html=\"marked.parse(props.markdown['content'])\" class=\"markdown-content\" />\n  </div>\n</template>\n\n<script setup>\nimport { marked } from \"marked\";\n\n// 接收 props\nconst props = defineProps({\n  markdown: {\n    type: String,\n    required: false,\n    default: \"\",\n  },\n});\n\n</script>\n\n<style scoped>\n.markdown-content {\n  /* 你可以在这里添加样式 */\n}\n</style>\n","import script from \"./MarkdownRenderer.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MarkdownRenderer.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MarkdownRenderer.vue?vue&type=style&index=0&id=e8aa3298&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e8aa3298\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createVNode as _createVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nimport { computed, onBeforeUnmount, ref } from \"vue\";\nimport MarkdownRenderer from \"@/components/chat/content/MarkdownRenderer.vue\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ChatContent',\n  props: {\n  messageList: {\n    type: Array,\n    required: true,\n  },\n},\n  setup(__props) {\n\nconst props = __props;\n\n/* 下面的就这样吧 */\n// 创建响应式的窗口高度数据\nconst max_height = ref(window.innerHeight);\n\n// 用于更新窗口高度的函数，当窗口大小变化时调用它来更新响应式数据的值\nconst updateWindowHeight = () => {\n  max_height.value = window.innerHeight;\n};\n\n// 监听窗口大小变化\nwindow.addEventListener(\"resize\", updateWindowHeight);\nupdateWindowHeight();\n\n// 在组件销毁前移除窗口大小变化的监听，避免内存泄漏\nonBeforeUnmount(() => {\n  window.removeEventListener(\"resize\", updateWindowHeight);\n});\n\n// 计算属性，基于窗口高度的响应式数据进行计算，减去161再减去 footerHeight\nconst computedHeight = computed(() => {\n  return max_height.value - 64 - 162;\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_avatar = _resolveComponent(\"a-avatar\")!\n  const _component_a_list_item_meta = _resolveComponent(\"a-list-item-meta\")!\n  const _component_icon_edit = _resolveComponent(\"icon-edit\")!\n  const _component_icon_delete = _resolveComponent(\"icon-delete\")!\n  const _component_a_list_item = _resolveComponent(\"a-list-item\")!\n  const _component_a_list = _resolveComponent(\"a-list\")!\n\n  return (_openBlock(), _createBlock(_component_a_list, {\n    \"max-height\": computedHeight.value,\n    scrollbar: \"\",\n    bordered: false\n  }, {\n    header: _withCtx(() => [\n      _createTextVNode(_toDisplayString(props.messageList.length === 0 ?  \"\" : props.messageList[0].content), 1)\n    ]),\n    default: _withCtx(() => [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(props.messageList, (item, index) => {\n        return (_openBlock(), _createBlock(_component_a_list_item, { key: index }, {\n          actions: _withCtx(() => [\n            _createVNode(_component_icon_edit),\n            _createVNode(_component_icon_delete)\n          ]),\n          default: _withCtx(() => [\n            (item.role !== 'system')\n              ? (_openBlock(), _createBlock(_component_a_list_item_meta, {\n                  key: 0,\n                  title: item.role\n                }, {\n                  description: _withCtx(() => [\n                    _createVNode(MarkdownRenderer, { markdown: item }, null, 8, [\"markdown\"])\n                  ]),\n                  avatar: _withCtx(() => [\n                    _createVNode(_component_a_avatar, { shape: \"square\" }, {\n                      default: _withCtx(() => _cache[0] || (_cache[0] = [\n                        _createElementVNode(\"img\", {\n                          alt: \"avatar\",\n                          src: \"https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/3ee5f13fb09879ecb5185e440cef6eb9.png~tplv-uwbnlip3yd-webp.webp\"\n                        }, null, -1)\n                      ])),\n                      _: 1\n                    })\n                  ]),\n                  _: 2\n                }, 1032, [\"title\"]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _: 2\n        }, 1024))\n      }), 128))\n    ]),\n    _: 1\n  }, 8, [\"max-height\"]))\n}\n}\n\n})","<template>\n  <a-list :max-height=\"computedHeight\" scrollbar :bordered=\"false\">\n    <template #header>\n      {{ props.messageList.length === 0 ?  \"\" : props.messageList[0].content }}\n    </template>\n    <a-list-item v-for=\"(item, index) in props.messageList\" :key=\"index\">\n      <a-list-item-meta :title=\"item.role\"  v-if=\"item.role !== 'system'\">\n        <template #description>\n            <MarkdownRenderer :markdown=\"item\" />\n        </template>\n        <template #avatar>\n          <a-avatar shape=\"square\">\n            <img\n              alt=\"avatar\"\n              src=\"https://p1-arco.byteimg.com/tos-cn-i-uwbnlip3yd/3ee5f13fb09879ecb5185e440cef6eb9.png~tplv-uwbnlip3yd-webp.webp\"\n            />\n          </a-avatar>\n        </template>\n      </a-list-item-meta>\n      <template #actions>\n        <icon-edit />\n        <icon-delete />\n      </template>\n    </a-list-item>\n  </a-list>\n</template>\n<script setup lang=\"ts\">\nimport { computed, onBeforeUnmount, defineProps, ref } from \"vue\";\nimport MarkdownRenderer from \"@/components/chat/content/MarkdownRenderer.vue\";\n\nconst props = defineProps({\n  messageList: {\n    type: Array,\n    required: true,\n  },\n});\n\n/* 下面的就这样吧 */\n// 创建响应式的窗口高度数据\nconst max_height = ref(window.innerHeight);\n\n// 用于更新窗口高度的函数，当窗口大小变化时调用它来更新响应式数据的值\nconst updateWindowHeight = () => {\n  max_height.value = window.innerHeight;\n};\n\n// 监听窗口大小变化\nwindow.addEventListener(\"resize\", updateWindowHeight);\nupdateWindowHeight();\n\n// 在组件销毁前移除窗口大小变化的监听，避免内存泄漏\nonBeforeUnmount(() => {\n  window.removeEventListener(\"resize\", updateWindowHeight);\n});\n\n// 计算属性，基于窗口高度的响应式数据进行计算，减去161再减去 footerHeight\nconst computedHeight = computed(() => {\n  return max_height.value - 64 - 162;\n});\n</script>\n<style scoped></style>\n","import script from \"./ChatContent.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ChatContent.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div id=\"contentEmpty\">\n    <a-card :style=\"{ width: '80%' }\" :bordered=\"false\">\n      <a-typography>\n        <a-typography-title> Dialogue</a-typography-title>\n        <a-typography-paragraph>\n          看见左边了吗？选一个。 没有？那就创建一个\n        </a-typography-paragraph>\n      </a-typography>\n    </a-card>\n  </div>\n</template>\n\n<script setup lang=\"ts\"></script>\n\n<style scoped>\n#contentEmpty {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n</style>\n","import { render } from \"./ContentEmpty.vue?vue&type=template&id=4537875b&scoped=true\"\nconst script = {}\n\nimport \"./ContentEmpty.vue?vue&type=style&index=0&id=4537875b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4537875b\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vShow as _vShow, withDirectives as _withDirectives, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"chatFooter\",\n  ref: \"myDiv\"\n}\n\nimport { ref } from \"vue\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ChatFooter',\n  props: {\n  sendLoding: {\n    type: Boolean,\n    required: false,\n  },\n},\n  emits: [\"sendMessage\"],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst text = ref(\"解释一下1+1\");\n\nconst emit = __emit;\n\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_button = _resolveComponent(\"a-button\")!\n  const _component_a_button_group = _resolveComponent(\"a-button-group\")!\n  const _component_a_space = _resolveComponent(\"a-space\")!\n  const _component_a_textarea = _resolveComponent(\"a-textarea\")!\n  const _component_a_layout_content = _resolveComponent(\"a-layout-content\")!\n  const _component_icon_expand = _resolveComponent(\"icon-expand\")!\n  const _component_icon_send = _resolveComponent(\"icon-send\")!\n  const _component_n_button_group = _resolveComponent(\"n-button-group\")!\n  const _component_a_layout_sider = _resolveComponent(\"a-layout-sider\")!\n  const _component_a_layout = _resolveComponent(\"a-layout\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_a_space, { direction: \"vertical\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_a_button_group, { type: \"primary\" }, {\n          default: _withCtx(() => [\n            _createVNode(_component_a_button, {\n              type: \"text\",\n              size: \"mini\"\n            }, {\n              default: _withCtx(() => _cache[2] || (_cache[2] = [\n                _createTextVNode(\"copy\")\n              ])),\n              _: 1\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _createVNode(_component_a_layout, { class: \"chat-footer\" }, {\n      default: _withCtx(() => [\n        _createVNode(_component_a_layout_content, null, {\n          default: _withCtx(() => [\n            _createVNode(_component_a_textarea, {\n              \"model-value\": text.value,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((text).value = $event)),\n              placeholder: \"请输入内容\",\n              \"max-length\": { length: 4000, errorOnly: true },\n              \"auto-size\": { maxRows: 4, minRows: 4 },\n              \"allow-clear\": \"\",\n              \"show-word-limit\": \"\"\n            }, null, 8, [\"model-value\"])\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_a_layout_sider, null, {\n          default: _withCtx(() => [\n            _withDirectives(_createVNode(_component_n_button_group, { vertical: \"\" }, {\n              default: _withCtx(() => [\n                _withDirectives(_createVNode(_component_a_button, null, {\n                  icon: _withCtx(() => [\n                    _createVNode(_component_icon_expand)\n                  ]),\n                  _: 1\n                }, 512), [\n                  [_vShow, text.value.length > 400]\n                ]),\n                _createVNode(_component_a_button, {\n                  loading: props.sendLoding\n                }, {\n                  icon: _withCtx(() => [\n                    _createVNode(_component_icon_send, {\n                      onClick: _cache[1] || (_cache[1] = ($event: any) => (emit('sendMessage', text.value)))\n                    })\n                  ]),\n                  _: 1\n                }, 8, [\"loading\"])\n              ]),\n              _: 1\n            }, 512), [\n              [_vShow, text.value]\n            ])\n          ]),\n          _: 1\n        })\n      ]),\n      _: 1\n    }),\n    _cache[3] || (_cache[3] = _createElementVNode(\"span\", { class: \"information\" }, \"项目开发中\", -1))\n  ], 512))\n}\n}\n\n})","<template>\n  <div id=\"chatFooter\" ref=\"myDiv\">\n    <a-space direction=\"vertical\">\n      <a-button-group type=\"primary\">\n        <a-button type=\"text\" size=\"mini\">copy</a-button>\n      </a-button-group>\n    </a-space>\n\n    <a-layout class=\"chat-footer\">\n      <a-layout-content>\n        <a-textarea\n          v-model:model-value=\"text\"\n          placeholder=\"请输入内容\"\n          :max-length=\"{ length: 4000, errorOnly: true }\"\n          :auto-size=\"{ maxRows: 4, minRows: 4 }\"\n          allow-clear\n          show-word-limit\n        />\n      </a-layout-content>\n      <a-layout-sider>\n        <n-button-group vertical v-show=\"text\">\n          <a-button v-show=\"text.length > 400\">\n            <template #icon>\n              <icon-expand />\n            </template>\n          </a-button>\n          <a-button :loading=\"props.sendLoding\">\n            <template #icon>\n              <icon-send @click=\"emit('sendMessage', text)\" />\n            </template>\n          </a-button>\n        </n-button-group>\n      </a-layout-sider>\n    </a-layout>\n\n    <span class=\"information\">项目开发中</span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, defineProps } from \"vue\";\n\nconst props = defineProps({\n  sendLoding: {\n    type: Boolean,\n    required: false,\n  },\n});\n\nconst text = ref(\"解释一下1+1\");\n\nconst emit = defineEmits([\"sendMessage\"]);\n\n</script>\n\n<style scoped>\n#chatFooter .information {\n  padding: 5px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: var(--color-text-4);\n  font-stretch: condensed;\n  text-align: center;\n}\n\n#chatFooter .chat-footer :deep(.arco-layout-content) {\n  padding: 0;\n}\n\n#chatFooter .chat-footer :deep(.arco-layout-sider-light) {\n  box-shadow: None;\n  width: auto !important;\n}\n\n#chatFooter .chat-footer :deep(.arco-btn-size-medium.arco-btn-only-icon) {\n  height: 34px;\n  width: 34px;\n}\n</style>\n","import script from \"./ChatFooter.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ChatFooter.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ChatFooter.vue?vue&type=style&index=0&id=33454e96&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-33454e96\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx } from \"vue\"\n\nimport { IconCaretLeft, IconCaretRight } from \"@arco-design/web-vue/es/icon\";\nimport ChatMenu from \"./menu/ChatMenu.vue\";\nimport ChatContent from \"./content/ChatContent.vue\";\nimport ContentEmpty from \"./content/ContentEmpty.vue\";\nimport ChatFooter from \"./footer/ChatFooter.vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { onMounted, ref, watch } from \"vue\";\nimport { useUserStore } from \"@/store\";\nimport { Api } from \"@/api/api\";\nimport { Message } from \"@arco-design/web-vue\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ChatIndex',\n  setup(__props) {\n\nconst UserStore = useUserStore();\nconst route = useRoute();\nconst router = useRouter();\nconst sendLoding = ref(false)\nconst chatId = ref<string | undefined | null>(null);\nconst messageList = ref([]);\n\nconst getMessage = async (id) => {\n  if (!id) return;\n  chatId.value = id;\n\n  try {\n    const res = await Api.get_message({\n      chatId: id,\n      userId: UserStore.gettersUserInfo._id,\n    });\n    if (res.status_code === 200) {\n      Message.success(res.message);\n      messageList.value = res.data.messages;\n      console.log(res.data.messages);\n    } else Message.error(res.message);\n  } catch (err) {\n    console.log(\"获取失败\");\n  }\n};\n\nconst sendMessage = (sendMessage) => {\n  sendLoding.value = true;\n  const socket = new WebSocket(`ws://localhost:8000/message`);\n  let messageListIndex = null\n\n  socket.onopen = function () {\n    console.log(\"WebSocket连接已打开\");\n    messageList.value.push({\n      content: sendMessage,\n      role: \"user\",\n    });\n    messageList.value.push({\n      content: \"\",\n      role: \"assistant\",\n    });\n    messageListIndex = messageList.value.length - 1;\n    // 发送初始消息或参数\n    socket.send(JSON.stringify({\n      chatId: chatId.value,\n      userId: UserStore.gettersUserInfo._id,\n      sendMessage: sendMessage\n    }));\n  };\n\n  socket.onmessage = function(event) {\n    if (event.data) messageList.value[messageListIndex]['content'] += event.data;\n  };\n\n  socket.onerror = function (error) {\n    messageList.value[messageListIndex]['content'] = error;\n    sendLoding.value = false;\n  };\n\n  socket.onclose = function () {\n    console.log(\"WebSocket连接已关闭\");\n    sendLoding.value = false;\n  }\n};\n\nwatch(() => route.params.id, getMessage, { immediate: true });\n\nonMounted(() => {\n  chatId.value = route.params.id as string;\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_layout_sider = _resolveComponent(\"a-layout-sider\")!\n  const _component_a_layout_content = _resolveComponent(\"a-layout-content\")!\n  const _component_a_layout_footer = _resolveComponent(\"a-layout-footer\")!\n  const _component_a_layout = _resolveComponent(\"a-layout\")!\n\n  return (_openBlock(), _createBlock(_component_a_layout, { class: \"layout-demo-chat\" }, {\n    default: _withCtx(() => [\n      _createVNode(_component_a_layout_sider, { collapsible: \"\" }, {\n        trigger: _withCtx(({ collapsed }) => [\n          collapsed\n            ? (_openBlock(), _createBlock(_unref(IconCaretRight), { key: 0 }))\n            : (_openBlock(), _createBlock(_unref(IconCaretLeft), { key: 1 }))\n        ]),\n        default: _withCtx(() => [\n          _createVNode(ChatMenu)\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_a_layout, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_a_layout_content, null, {\n            default: _withCtx(() => [\n              (!chatId.value)\n                ? (_openBlock(), _createBlock(ContentEmpty, { key: 0 }))\n                : (_openBlock(), _createBlock(ChatContent, {\n                    key: 1,\n                    messageList: messageList.value\n                  }, null, 8, [\"messageList\"]))\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_a_layout_footer, null, {\n            default: _withCtx(() => [\n              _createVNode(ChatFooter, {\n                onSendMessage: sendMessage,\n                sendLoding: sendLoding.value\n              }, null, 8, [\"sendLoding\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","<template>\n  <a-layout class=\"layout-demo-chat\">\n    <a-layout-sider collapsible>\n      <ChatMenu />\n      <!-- trigger -->\n      <template #trigger=\"{ collapsed }\">\n        <IconCaretRight v-if=\"collapsed\"></IconCaretRight>\n        <IconCaretLeft v-else></IconCaretLeft>\n      </template>\n    </a-layout-sider>\n    <a-layout>\n      <a-layout-content>\n        <ContentEmpty v-if=\"!chatId\" />\n        <ChatContent v-else :messageList=\"messageList\" />\n      </a-layout-content>\n      <a-layout-footer>\n        <ChatFooter @sendMessage=\"sendMessage\" :sendLoding=\"sendLoding\" />\n      </a-layout-footer>\n    </a-layout>\n  </a-layout>\n</template>\n\n<script setup lang=\"ts\">\nimport { IconCaretLeft, IconCaretRight } from \"@arco-design/web-vue/es/icon\";\nimport ChatMenu from \"./menu/ChatMenu.vue\";\nimport ChatContent from \"./content/ChatContent.vue\";\nimport ContentEmpty from \"./content/ContentEmpty.vue\";\nimport ChatFooter from \"./footer/ChatFooter.vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { onMounted, ref, watch } from \"vue\";\nimport { useUserStore } from \"@/store\";\nimport { Api } from \"@/api/api\";\nimport { Message } from \"@arco-design/web-vue\";\n\nconst UserStore = useUserStore();\nconst route = useRoute();\nconst router = useRouter();\nconst sendLoding = ref(false)\nconst chatId = ref<string | undefined | null>(null);\nconst messageList = ref([]);\n\nconst getMessage = async (id) => {\n  if (!id) return;\n  chatId.value = id;\n\n  try {\n    const res = await Api.get_message({\n      chatId: id,\n      userId: UserStore.gettersUserInfo._id,\n    });\n    if (res.status_code === 200) {\n      Message.success(res.message);\n      messageList.value = res.data.messages;\n      console.log(res.data.messages);\n    } else Message.error(res.message);\n  } catch (err) {\n    console.log(\"获取失败\");\n  }\n};\n\nconst sendMessage = (sendMessage) => {\n  sendLoding.value = true;\n  const socket = new WebSocket(`ws://localhost:8000/message`);\n  let messageListIndex = null\n\n  socket.onopen = function () {\n    console.log(\"WebSocket连接已打开\");\n    messageList.value.push({\n      content: sendMessage,\n      role: \"user\",\n    });\n    messageList.value.push({\n      content: \"\",\n      role: \"assistant\",\n    });\n    messageListIndex = messageList.value.length - 1;\n    // 发送初始消息或参数\n    socket.send(JSON.stringify({\n      chatId: chatId.value,\n      userId: UserStore.gettersUserInfo._id,\n      sendMessage: sendMessage\n    }));\n  };\n\n  socket.onmessage = function(event) {\n    if (event.data) messageList.value[messageListIndex]['content'] += event.data;\n  };\n\n  socket.onerror = function (error) {\n    messageList.value[messageListIndex]['content'] = error;\n    sendLoding.value = false;\n  };\n\n  socket.onclose = function () {\n    console.log(\"WebSocket连接已关闭\");\n    sendLoding.value = false;\n  }\n};\n\nwatch(() => route.params.id, getMessage, { immediate: true });\n\nonMounted(() => {\n  chatId.value = route.params.id as string;\n});\n</script>\n\n<style scoped>\n.layout-demo-chat {\n  display: flex;\n  height: 100%;\n}\n\n.layout-demo-chat :deep(.arco-layout-content) {\n}\n\n.layout-demo-chat :deep(.arco-layout-footer) {\n  background-color: var(--color-bg-2);\n  border-top: 1px solid var(--color-border);\n  max-height: 160px;\n}\n</style>\n","import script from \"./ChatIndex.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ChatIndex.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ChatIndex.vue?vue&type=style&index=0&id=fc3b41a0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fc3b41a0\"]])\n\nexport default __exports__"],"names":["_defineComponent","__name","props","setup","__props","UserStore","useUserStore","user_info","new_chat_visible","ref","selected_keys","ok_loading","descriptionsData","form","reactive","user_id","_id","user_name","username","chat_title","system","chat_parameters","model","messages","top_p","temperature","presence_penalty","max_tokens","response_foramt","seed","stream","stop","tools","stream_options","enable_search","handleChange","modelInfo","model_call","value","push","label","model_introduction","limit","residue_limit","handleOk","async","res","Api","add_chat","status_code","Message","success","data","message","getData","error","err","console","log","watch","new_value","onMounted","gettersModelList","length","getModelList","_ctx","_cache","_component_a_menu_item","_resolveComponent","_component_a_menu","_component_a_input","_component_a_form_item","_component_a_option","_component_a_select","_component_a_slider","_component_a_form","_component_a_descriptions","_component_a_drawer","_openBlock","_createElementBlock","_Fragment","_createVNode","style","width","onMenuItemClick","$event","default","_withCtx","key","_createTextVNode","_","visible","onOk","onCancel","unmountOnClose","title","field","tooltip","modelValue","placeholder","onChange","_renderList","_unref","item","_createBlock","model_name","min","max","step","_withDirectives","column","_vShow","__exports__","menuSelected","route","useRoute","chat_list","chat_list_loading","onClickMenuItem","router","get_chat_list","deleteChat","delete_chat","setMenuSelected","id","params","immediate","_component_a_skeleton_line","_component_a_space","_component_a_skeleton","_component_a_empty","_component_a_doption","_component_a_dropdown","ChatMenuNewChat","animation","direction","size","rows","_createCommentVNode","index","trigger","alignPoint","content","onClick","chat_id","message_id","_toDisplayString","_getDefaults","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","noopTest","exec","edit","regex","opt","source","obj","replace","name","val","valSource","other","caret","getRegex","RegExp","codeRemoveIndent","outputLinkReplace","indentCodeCompensation","beginningSpace","endingHash","startingSpaceChar","endingSpaceChar","nonSpaceChar","newLineCharGlobal","tabCharGlobal","multipleSpaceGlobal","blankLine","doubleBlankLine","blockquoteStart","blockquoteSetextReplace","blockquoteSetextReplace2","listReplaceTabs","listReplaceNesting","listIsTask","listReplaceTask","anyLine","hrefBrackets","tableDelimiter","tableAlignChars","tableRowBlankLine","tableAlignRight","tableAlignCenter","tableAlignLeft","startATag","endATag","startPreScriptTag","endPreScriptTag","startAngleBracket","endAngleBracket","pedanticHrefTitle","unicodeAlphaNumeric","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","unescapeTest","percentDecode","findPipe","splitPipe","slashPipe","carriageReturn","spaceLine","notSpaceStart","endingNewline","listItemRegex","bull","nextBulletRegex","indent","Math","hrRegex","fencesBeginRegex","headingBeginRegex","htmlBeginRegex","newline","blockCode","fences","hr","heading","bullet","lheading","_paragraph","blockText","_blockLabel","def","list","_tag","_comment","html","paragraph","blockquote","blockNormal","code","table","text","gfmTable","blockGfm","blockPedantic","escape$1","inlineCode","br","inlineText","_punctuation","_punctuationOrSpace","_notPunctuationOrSpace","punctuation","blockSkip","emStrongLDelim","emStrongRDelimAst","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","tag","_inlineLabel","link","reflink","nolink","reflinkSearch","inlineNormal","_backpedal","del","escape","url","inlinePedantic","inlineGfm","inlineBreaks","block","normal","inline","escapeReplacements","getEscapeReplacement","ch","encode","test","cleanUrl","href","encodeURI","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","i","trim","shift","at","pop","splice","rtrim","c","invert","l","suffLen","currChar","charAt","slice","findClosingBracket","b","indexOf","level","outputLink","cap","raw","lexer","rules","state","inLink","token","type","tokens","inlineTokens","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","_Tokenizer","constructor","options","_defineProperty","this","space","src","codeBlockStyle","lang","trimmed","depth","lines","inBlockquote","currentLines","currentRaw","currentText","top","blockTokens","lastToken","oldToken","newText","newToken","substring","isordered","ordered","start","loose","items","itemRegex","endsWithBlankLine","endEarly","itemContents","line","t","repeat","nextLine","trimStart","search","rawLine","nextLineWithoutTabs","ischecked","istask","task","checked","lastItem","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","toLowerCase","headers","aligns","header","align","cell","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","emStrong","maskedSrc","prevChar","nextChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastIndex","lastCharLength","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","_Lexer","Object","create","inlineQueue","lex","lexInline","next","lastParagraphClipped","extTokenizer","call","undefined","cutSrc","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","charCodeAt","Error","keys","includes","lastIndexOf","keepPrevChar","startInline","_Renderer","langString","body","parser","parse","parseInline","j","listitem","startAttr","itemBody","checkbox","unshift","tablecell","tablerow","k","strong","em","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","anyToken","renderers","genericToken","ret","textToken","_Hooks","preprocess","markdown","postprocess","processAllTokens","provideLexer","provideParser","Set","Marked","args","setOptions","parseMarkdown","use","callback","values","concat","tableToken","listToken","defaults","childTokens","flat","pack","opts","ext","prevRenderer","apply","extLevel","prop","rendererProp","rendererFunc","tokenizerProp","tokenizerFunc","prevTokenizer","hooksProp","hooksFunc","prevHook","passThroughHooks","has","arg","Promise","resolve","then","packWalktokens","blockType","origOpt","throwError","onError","prototype","toString","all","catch","e","msg","reject","markedInstance","marked","getDefaults","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","messageList","Array","required","max_height","window","innerHeight","updateWindowHeight","addEventListener","onBeforeUnmount","removeEventListener","computedHeight","computed","_component_a_avatar","_component_a_list_item_meta","_component_icon_edit","_component_icon_delete","_component_a_list_item","_component_a_list","scrollbar","bordered","actions","role","description","MarkdownRenderer","avatar","shape","_createElementVNode","alt","_hoisted_1","_component_a_card","_component_a_typography","_component_a_typography_title","_component_a_typography_paragraph","script","render","sendLoding","Boolean","emits","emit","__emit","_component_a_button","_component_a_button_group","_component_a_textarea","_component_a_layout_content","_component_icon_expand","_component_icon_send","_component_n_button_group","_component_a_layout_sider","_component_a_layout","class","errorOnly","maxRows","minRows","vertical","icon","loading","useRouter","chatId","getMessage","get_message","userId","gettersUserInfo","sendMessage","socket","WebSocket","messageListIndex","onopen","send","JSON","stringify","onmessage","event","onerror","onclose","_component_a_layout_footer","collapsible","collapsed","IconCaretRight","IconCaretLeft","ChatMenu","ChatContent","ContentEmpty","ChatFooter","onSendMessage"],"sourceRoot":""}